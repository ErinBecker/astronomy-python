[{"path":"https://ErinBecker.github.io/astronomy-python/01-query.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"Basic Queries","text":"episode demonstrates steps selecting downloading data Gaia Database: First make connection Gaia server, explore information database tables contains, write query send server, finally download response server.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/01-query.html","id":"old-versions-of-astroquery-output","dir":"","previous_headings":"","what":"Old versions of astroquery output","title":"Basic Queries","text":"using version astroquery ’s older v0.4.4, may see output","code":"Created TAP+ (v1.2.1) - Connection: \tHost: gea.esac.esa.int \tUse HTTPS: True \tPort: 443 \tSSL Port: 443 Created TAP+ (v1.2.1) - Connection: \tHost: geadata.esac.esa.int \tUse HTTPS: True \tPort: 443 \tSSL Port: 443"},{"path":"https://ErinBecker.github.io/astronomy-python/01-query.html","id":"exercise-2-minutes","dir":"","previous_headings":"","what":"Exercise (2 minutes)","title":"Basic Queries","text":"One tables use gaiadr2.panstarrs1_original_valid. Use load_table get metadata table. many columns names?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/01-query.html","id":"triple-quotes-strings","dir":"","previous_headings":"","what":"Triple-quotes strings","title":"Basic Queries","text":"use triple-quoted string can include line breaks query, makes easier read.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/01-query.html","id":"repetition","dir":"","previous_headings":"","what":"Repetition","title":"Basic Queries","text":"table repeated three times? first name module, second name submodule, third name class. time care last one. ’s like Linnean name Western lowland gorilla, Gorilla gorilla gorilla.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/01-query.html","id":"exercise-3-minutes","dir":"","previous_headings":"","what":"Exercise (3 minutes)","title":"Basic Queries","text":"Read documentation table choose column looks interesting . Add column name query run . units column selected? data type?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/01-query.html","id":"different-results","dir":"","previous_headings":"","what":"Different results","title":"Basic Queries","text":"results query may differ Instructor’s. TOP 3000 returns 3000 results, results organized particular way.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/01-query.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Basic Queries","text":"clauses query right order. Go back change order clauses query2 run . modified query fail, notice don’t get much useful debugging information. reason, developing debugging ADQL queries can really hard. suggestions might help: Whenever possible, start working query, either example find online query used past. Make small changes test change continue. debugging, use TOP limit number rows result. make test run faster, reduces development time. Launching test queries synchronously might make start faster, .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/01-query.html","id":"exercise-5-minutes-1","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Basic Queries","text":"Read SQL operators modify previous query select rows bp_rp -0.75 2.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/01-query.html","id":"exercise-10-minutes","dir":"","previous_headings":"","what":"Exercise (10 minutes)","title":"Basic Queries","text":"query always selects sources parallax less 1. suppose want take upper bound input. Modify query3_base replace 1 format specifier like {max_parallax}. Now, call format, add keyword argument assigns value max_parallax, confirm format specifier gets replaced value provide.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/01-query.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"Basic Queries","text":"can’t download entire dataset (practical) use queries select data need. Read metadata documentation make sure understand tables, columns, mean. Develop queries incrementally: start something simple, test , add little bit time. Use ADQL features like TOP COUNT test run query might return lot data. know query return fewer 3000 rows, can run synchronously. might return 3000 rows, run asynchronously. ADQL SQL case-sensitive. don’t capitalize keywords, make code readable. ADQL SQL don’t require break query multiple lines, make code readable. Make section notebook self-contained. Try use variable name one section. Keep notebooks short. Look places can break analysis phases one notebook per phase.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/02-coords.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"Coordinate Transformations","text":"’ll start example “cone search”; , selects stars appear circular region sky. , select stars vicinity GD-1, : Use Quantity objects represent measurements units. Use Astropy convert coordinates one frame another. Use ADQL keywords POLYGON, CONTAINS, POINT select stars fall within polygonal region. Submit query download results. Store results FITS file.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/02-coords.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Coordinate Transformations","text":"Create quantity represents 5 arcminutes assign variable called radius. convert degrees.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/02-coords.html","id":"exercise-5-minutes-1","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Coordinate Transformations","text":"debugging queries like , can use TOP limit size results, still don’t know big results . alternative use COUNT, asks number rows selected, return . previous query, replace TOP 10 source_id COUNT(source_id) run query . many stars Gaia identified cone searched?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/02-coords.html","id":"coordinate-variables","dir":"","previous_headings":"","what":"Coordinate Variables","title":"Coordinate Transformations","text":"Notice Galactic frame, coordinates variables usually use Galactic longitude latitude called l b, respectively, ra dec. reference frames different ways specify coordinates SkyCoord object use names.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/02-coords.html","id":"exercise-10-minutes","dir":"","previous_headings":"","what":"Exercise (10 minutes)","title":"Coordinate Transformations","text":"Find location GD-1 ICRS coordinates. Create SkyCoord object 0°, 0° GD-1 frame. Transform ICRS frame. Hint: ICRS standard frame, built Astropy. can specify name, icrs (galactic).","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/02-coords.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"Coordinate Transformations","text":"measurements units, use Quantity objects represent units explicitly check errors. Use format function compose queries; often faster less error-prone. Develop queries incrementally: start something simple, test , add little bit time. query working, save data local file. shut notebook come back later, can reload file; don’t run query .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/03-transform.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"Plotting and Tabular Data","text":"read back results previous lesson, saved FITS file. transform coordinates proper motion data ICRS back coordinate frame GD-1. put results Pandas DataFrame.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/03-transform.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"Plotting and Tabular Data","text":"starting new notebook episode, expand section information need get started. previous episode, ran query Gaia server, downloaded data roughly 140,000 stars, saved data FITS file. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_results.fits')","code":"import astropy.units as u from astropy.coordinates import SkyCoord from gala.coordinates import GD1Koposov10 from astropy.table import Table  from episode_functions import * filename = 'gd1_results.fits' polygon_results = Table.read(filename)  gd1_frame = GD1Koposov10()"},{"path":"https://ErinBecker.github.io/astronomy-python/03-transform.html","id":"keeping-plots-in-the-notebook","dir":"","previous_headings":"","what":"Keeping plots in the notebook","title":"Plotting and Tabular Data","text":"recent versions Jupyter, plots appear “inline”; , part notebook. older versions, plots appear new window. plots appear new window, might want run following Jupyter magic command notebook cell:","code":"%matplotlib inline"},{"path":"https://ErinBecker.github.io/astronomy-python/03-transform.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Plotting and Tabular Data","text":"call plt.plot, use keyword argument markersize make markers smaller. add keyword argument alpha make markers partly transparent. Adjust arguments think figure shows data clearly. Note: made changes, might notice figure shows stripes lower density stars. stripes caused way Gaia scans sky, can read . dataset using, Gaia Data Release 2, covers 22 months observations; time, parts sky scanned others.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/03-transform.html","id":null,"dir":"","previous_headings":"","what":"Callout","title":"Plotting and Tabular Data","text":"Detail notice SkyCoord attribute called proper_motion, might wonder using . : proper_motion contains data pm_phi1_cosphi2 pm_phi2, different format.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/03-transform.html","id":"pandas-dataframes-versus-astropy-tables","dir":"","previous_headings":"","what":"Pandas DataFrames versus Astropy Tables","title":"Plotting and Tabular Data","text":"Two common choices Pandas DataFrame Astropy Table. Pandas DataFrames Astropy Tables share many characteristics manipulations can done either. become familiar , develop sense one prefer different tasks. instance may choose use Astropy Tables read data, especially astronomy specific data formats, Pandas DataFrames inspect data. Fortunately, Astropy makes easy convert two data types. choose use Pandas DataFrame, two reasons: provides capabilities (almost) superset data structures, --one solution. Pandas general-purpose tool useful many domains, especially data science. going develop expertise one tool, Pandas good choice. However, compared Astropy Table, Pandas one big drawback: keep metadata associated table, including units columns. Nevertheless, think useful data type familiar .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/03-transform.html","id":"attributes-vs-functions","dir":"","previous_headings":"","what":"Attributes vs functions","title":"Plotting and Tabular Data","text":"shape attribute, display value without calling function. head function, need parentheses.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/03-transform.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"Plotting and Tabular Data","text":"make scatter plot, adjust size markers transparency figure overplotted; otherwise can misrepresent data badly. simple scatter plots Matplotlib, plot faster scatter. Astropy Table Pandas DataFrame similar many ways provide many functions. pros cons, many projects, either one reasonable choice. store data Pandas DataFrame, good option HDF5 file, can contain multiple Datasets (’ll dig Join lesson).","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/04-motion.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"Plotting and Pandas","text":"put results Pandas DataFrame, use select stars near centerline GD-1. Plotting proper motion stars, identify region proper motion stars likely GD-1. Finally, select plot stars whose proper motion region.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/04-motion.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"Plotting and Pandas","text":"starting new notebook episode, expand section information need get started. Previously, ran query Gaia server, downloaded data roughly 140,000 stars, transformed coordinates GD-1 reference frame, saved results HDF5 file (Dataset name results_df). use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"import astropy.units as u import matplotlib.pyplot as plt import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' results_df = pd.read_hdf(filename, 'results_df')"},{"path":"https://ErinBecker.github.io/astronomy-python/04-motion.html","id":"exercise-10-minutes","dir":"","previous_headings":"","what":"Exercise (10 minutes)","title":"Plotting and Pandas","text":"Review summary statistics table. values make sense based know context? see values seem problematic, evidence data issues?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/04-motion.html","id":"logical-operators","dir":"","previous_headings":"","what":"Logical operators","title":"Plotting and Pandas","text":"Python’s logical operators (, , ) work NumPy Pandas. libraries use bitwise operators (&, |, ~) elementwise logical operations (explanation ). Also, need parentheses around conditions; otherwise order operations incorrect.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/04-motion.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Plotting and Pandas","text":"going need centerline_df later well. Write line code add second Dataset HDF5 file. Hint: Since file already exists, use mode='w'.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/04-motion.html","id":"context-managers","dir":"","previous_headings":"","what":"Context Managers","title":"Plotting and Pandas","text":"use statement open file print statement (automatically) close . Read context managers.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/04-motion.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"Plotting and Pandas","text":"workflow often prototyped small set data can explored easily used identify ways limit dataset exactly data want. store data Pandas DataFrame, good option HDF5 file, can contain multiple Datasets.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/05-select.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"Transform and Select","text":"Using data previous episode, identify values proper motion stars likely GD-1. compose ADQL query selects stars based proper motion, can download data need. make possible search bigger region sky single query.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/05-select.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"Transform and Select","text":"starting new notebook episode, expand section information need get started. Previously, ran query Gaia server, downloaded data roughly 140,000 stars, saved data FITS file. selected just stars proper motion GD-1 saved results HDF5 file. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf') defines previously defined quantities:","code":"import astropy.units as u from astropy.coordinates import SkyCoord from astroquery.gaia import Gaia from gala.coordinates import GD1Koposov10, GD1, reflex_correct import matplotlib.pyplot as plt import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' centerline_df = pd.read_hdf(filename, 'centerline_df') selected_df = pd.read_hdf(filename, 'selected_df') pm1_min = -8.9 pm1_max = -6.9 pm2_min = -2.2 pm2_max =  1.0  pm1_rect, pm2_rect = make_rectangle(     pm1_min, pm1_max, pm2_min, pm2_max) gd1_frame = GD1Koposov10()"},{"path":"https://ErinBecker.github.io/astronomy-python/05-select.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Transform and Select","text":"Looking proper motion stars identified along centerline GD-1, ICRS reference frame define rectangle (pmra_min, pmra_max, pmdec_min, pmdec_max) encompass proper motion majority stars near centerline GD-1 without including much contamination stars.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/05-select.html","id":"exercise-10-minutes","dir":"","previous_headings":"","what":"Exercise (10 minutes)","title":"Transform and Select","text":"Define candidate_coord_pm_query_base, starting candidate_coord_query_base adding two new clauses select stars whose coordinates proper motion, pmra pmdec, fall within region defined pmra_min, pmra_max, pmdec_min, pmdec_max. next exercise use format statement fill values defined .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/05-select.html","id":"exercise-5-minutes-1","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Transform and Select","text":"Use format format candidate_coord_pm_query_base define candidate_coord_pm_query, filling values columns, sky_point_list, pmra_min, pmra_max, pmdec_min, pmdec_max.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/05-select.html","id":"between-vs-polygon","dir":"","previous_headings":"","what":"BETWEEN vs POLYGON","title":"Transform and Select","text":"may wondering used proper motion previously used POLYGON coordinates. ADQL intends POLYGON function used coordinates proper motion. enforce , produce error negative value passed first argument.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/05-select.html","id":"performance-warning","dir":"","previous_headings":"","what":"Performance Warning","title":"Transform and Select","text":"may see previous command issue similar performance warning: Series just created, mixing variables different types: sky_point_list string (text), whereas pmra_min etc. floating point numbers. combining different data types single Series somewhat inefficient, amount data small enough matter case, warning can safely ignored.","code":"[...] PerformanceWarning: your performance may suffer as PyTables will pickle object types that it cannot map directly to c-types [inferred_type->mixed-integer,key->values] [items->None]   point_series.to_hdf(filename, 'point_series')"},{"path":"https://ErinBecker.github.io/astronomy-python/05-select.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"Transform and Select","text":"possible, ‘move computation data’; , much work possible database server downloading data.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/06-join.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"Join","text":"reload candidate stars identified previous episode. run query Gaia server uploads table candidates uses JOIN operation select photometry data candidate stars. write results file use next episode.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/06-join.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"Join","text":"starting new notebook episode, expand section information need get started. previous episode, define rectangle around stars GD-1 spatial coordinates proper motion transformed ICRS coordinates created point lists polygon vertices. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"from astroquery.gaia import Gaia import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' point_series = pd.read_hdf(filename, 'point_series') sky_point_list = point_series['sky_point_list'] pmra_min = point_series['pmra_min'] pmra_max = point_series['pmra_max'] pmdec_min = point_series['pmdec_min'] pmdec_max = point_series['pmdec_max'] point_series"},{"path":"https://ErinBecker.github.io/astronomy-python/06-join.html","id":"a-caveat-about-matching-stars-between-catalogs","dir":"","previous_headings":"","what":"A caveat about matching stars between catalogs","title":"Join","text":"general, choosing star Gaia catalog finding corresponding star Pan-STARRS catalog easy. kind cross matching always possible, star might appear one catalog . even stars present, might clear one--one relationship stars two catalogs. Additional catalog matching tools available Astropy coordinates package. Fortunately, people worked problem, Gaia database includes cross-matching tables suggest best neighbor Pan-STARRS catalog many stars Gaia catalog. document describes cross matching process. Briefly, uses cone search find possible matches approximately right position, uses attributes like color magnitude choose pairs observations likely star.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/06-join.html","id":"british-vs-american-spelling-of-neighbour","dir":"","previous_headings":"","what":"British vs American Spelling of Neighbour","title":"Join","text":"Gaia database created maintained European Space Astronomy Center. reason, table spellings use British spelling neighbour (“u”). forget include table names queries .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/06-join.html","id":"sql-detail","dir":"","previous_headings":"","what":"SQL detail","title":"Join","text":"example, column name tables, replace clause simpler USINGclause:","code":"USING(source_id)"},{"path":"https://ErinBecker.github.io/astronomy-python/06-join.html","id":"exercise-15-minutes","dir":"","previous_headings":"","what":"Exercise (15 minutes)","title":"Join","text":"Now ready bring Pan-STARRS table. Starting previous query, add second JOIN clause joins gaiadr2.panstarrs1_original_valid, gives abbreviated name ps, matches original_ext_source_id best neighbor table obj_id Pan-STARRS table. Add g_mean_psf_mag i_mean_psf_mag column list, run query. result contain 490 rows 9 columns.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/06-join.html","id":"exercise-15-minutes-1","dir":"","previous_headings":"","what":"Exercise (15 minutes)","title":"Join","text":"Create new query base called candidate_join_query_base combines clauses previous query JOIN clauses best neighbor Pan-STARRS tables. Format query base using column names column_list, call result candidate_join_query. Hint: Make sure use qualified column names everywhere! Run query download results. table get 4300 rows 9 columns.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/06-join.html","id":"numpy-mask-warning","dir":"","previous_headings":"","what":"Numpy Mask Warning","title":"Join","text":"may see warning ends following phrase: site-packages/numpy/lib/function_base.py:4650: UserWarning: Warning: 'partition' ignore 'mask' MaskedColumn. arr.partition( astroquery returning table masked columns (really fancy masked numpy arrays). turn column pandas Series, maintains mask. Describe calls numpy functions perform statistics. Numpy recently implemented warning let know mask considered calculation performing.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/06-join.html","id":"number-of-neighbors","dir":"","previous_headings":"","what":"Number of neighbors","title":"Join","text":"table also contains number_of_neighbours number stars Pan-STARRS match terms position, using criteria choose likely match. interested final match, using criteria.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/06-join.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"Join","text":"Use JOIN operations combine data multiple tables database, using kind identifier match records one table records another. another example practice saw previous notebook, moving computation data. applications, saving data FITS HDF5 better CSV. FITS HDF5 binary formats, files usually smaller, store metadata, don’t lose anything read file back. hand, CSV ‘least common denominator’ format; , can read practically application works data.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/07-photo.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"Photometry","text":"reload data previous episode make color-magnitude diagram. use isochrone computed MIST specify polygonal region color-magnitude diagram select stars inside .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/07-photo.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"Photometry","text":"starting new notebook episode, expand section information need get started. previous episode, selected stars GD-1 based proper motion downloaded spatial, proper motion, photometry information joining Gaia PanSTARRs datasets. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"from os.path import getsize  import pandas as pd  from matplotlib import pyplot as plt  from episode_functions import * filename = 'gd1_data.hdf' candidate_df = pd.read_hdf(filename, 'candidate_df')"},{"path":"https://ErinBecker.github.io/astronomy-python/07-photo.html","id":"a-slight-detour-for-non-domain-experts","dir":"","previous_headings":"","what":"A slight detour for non-domain experts","title":"Photometry","text":"wondering (non-domain expert) interpret color-magnitude diagram, please expand section . pathologist can easily point tumor biopsy slide, can astronomers study stellar populations see two stellar main groups stars color magnitude diagram, one old star cluster (presumably, GD-1), , stars much closer, every distance Earth cluster (“foreground”). color magnitude diagram technique developed separate features just pathologists techniques contrast human tissue. color star primarily related star’s surface temperature, bluer stars indicating higher temperatures redder stars indicating lower temperatures. logic far color bottom match flame compared top. Foreground Stars: know temperature star, first need know distance account dust us star. can guess effect distance. star farther away fainter (lower y-axis value) star closer (think car headlights approach). Dust remove light star’s path telescopes, makes star seem like less energy otherwise , makes two things diagram: 1) look fainter (lower y-axis value) 2) look cooler (higher x-axis value). stars spread throughout diagram stars bright enough detected Milky Way GD-1 us made fainter redder (spread lower-right) spread distance us amount dust line sight. GD-1: pile stars lower-left quadrant diagram interesting suggests something distance amount dust way. use knowledge theoretical astrophysics (independently calculated outside work) estimate bright population old stars distance GD-1, get solid red line. exact values age metallicity ([Fe/H] value) variable needed reproduce theoretical isochrone, frankly, choice vary lot still fit data well. color-magnitude diagrams theoretical counterpart, .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/07-photo.html","id":"calculating-isochrone","dir":"","previous_headings":"","what":"Calculating Isochrone","title":"Photometry","text":"fact, can use MESA Isochrones & Stellar Tracks (MIST) compute us. Using MIST Version 1.2 web interface, computed isochrone following parameters: Rotation initial v/v_crit = 0.4 Single age, linear scale = 12e9 Composition [Fe/H] = -1.35 Synthetic Photometry, PanStarrs Extinction av = 0","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/07-photo.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Photometry","text":"encounter new object, good create toy example test think . Define list two points (represented two tuples), one inside polygon one outside polygon. Call contains_points polygon just created, passing list points defined, verify results expected.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/07-photo.html","id":"exercise-5-minutes-1","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Photometry","text":"Boolean values stored 0s 1s. FALSE = 0 TRUE = 1. Use information determine number stars fall inside polygon.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/07-photo.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"Photometry","text":"Matplotlib provides operations working points, polygons, geometric entities, just making figures. Use Matplotlib options control size aspect ratio figures make easier interpret. Record every element data analysis pipeline needed replicate results.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"Visualization","text":"Starting figure previous episode, add annotations present results clearly. learn several ways customize figures make appealing effective. Finally, learn make figure multiple panels.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"Visualization","text":"starting new notebook episode, expand section information need get started. previous episode, selected stars GD-1 based proper motion downloaded spatial, proper motion, photometry information joining Gaia PanSTARRs datasets. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf') defines previously defined quantities:","code":"import pandas as pd import numpy as np from matplotlib import pyplot as plt from matplotlib.patches import Polygon  from episode_functions import * filename = 'gd1_data.hdf' winner_df = pd.read_hdf(filename, 'winner_df')  centerline_df = pd.read_hdf(filename, 'centerline_df') candidate_df = pd.read_hdf(filename, 'candidate_df') loop_df = pd.read_hdf(filename, 'loop_df') pm1_min = -8.9 pm1_max = -6.9 pm2_min = -2.2 pm2_max =  1.0  pm1_rect, pm2_rect = make_rectangle(     pm1_min, pm1_max, pm2_min, pm2_max)"},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"exercise-10-minutes","dir":"","previous_headings":"","what":"Exercise (10 minutes)","title":"Visualization","text":"Think following questions: primary scientific result work? story figure telling? design figure, can identify 1 2 choices authors made think effective? Think big-picture elements, like number panels arranged, well details like choice typeface. Can identify 1 2 elements improved, might done differently?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"exercise-20-minutes","dir":"","previous_headings":"","what":"Exercise (20 minutes)","title":"Visualization","text":"Plot selected stars winner_df using plot_cmd_selection function choose features add figure: draw vertical lines, see plt.vlines plt.axvline. add text, see plt.text. add annotation text arrow, see plt.annotate. additional information text arrows.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"note-on-accessibility","dir":"","previous_headings":"","what":"Note on Accessibility","title":"Visualization","text":"Customization offers high degree personalization creating scientific visualizations. important also create accessible visualizations broad audience may include low-vision color-blind individuals. AAS Journals provide Graphics Guide authors tips external links can help produce accessible graphics: https://journals.aas.org/graphics-guide/","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"subplot-and-axes","dir":"","previous_headings":"","what":"subplot and axes","title":"Visualization","text":"Confusingly, Matplotlib objects subplot axes often used interchangeably. subplot axes object additional methods attributes.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"Read documentation tick_params use put ticks top right sides axes.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"exercise-5-minutes-1","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"Plot previous figure , see font sizes changed. Look element rcParams, change value, check effect figure.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"return-to-default","dir":"","previous_headings":"","what":"Return to Default","title":"Visualization","text":"switch back default style use","code":"plt.style.use('default')"},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"exercise-5-minutes-2","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"Choose one styles list select calling use. go back plot one previous figures see changes figure’s appearance.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"exercise-5-minutes-3","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"happens leave tight_layout?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"exercise-5-minutes-4","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"example, ratio widths panels 3:1. adjust wanted ratio 3:2?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"exercise-5-minutes-5","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"Add lines run plot_cmd function show polygon selected shaded area. Hint: pass loop_df argument Polygon episode 7 plot using add_patch.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":"exercise-5-minutes-6","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"Add Polygon patches just created right panels four panel figure.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/08-plot.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"Visualization","text":"Effective figures focus telling single story clearly authentically. major decisions needed creating effective summary figure like one can done away computer built low fidelity (hand drawn) high (tweaking rcParams, etc.). Consider using annotations guide reader’s attention important elements figure, keeping mind accessiblity issues detail may introduce. default Matplotlib style generates good quality figures, several ways can override defaults. find making customizations several projects, might want create style sheet.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"All in One View","text":"episode demonstrates steps selecting downloading data Gaia Database: First make connection Gaia server, explore information database tables contains, write query send server, finally download response server.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"old-versions-of-astroquery-output","dir":"","previous_headings":"","what":"Old versions of astroquery output","title":"All in One View","text":"using version astroquery ’s older v0.4.4, may see output","code":"Created TAP+ (v1.2.1) - Connection: \tHost: gea.esac.esa.int \tUse HTTPS: True \tPort: 443 \tSSL Port: 443 Created TAP+ (v1.2.1) - Connection: \tHost: geadata.esac.esa.int \tUse HTTPS: True \tPort: 443 \tSSL Port: 443"},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-2-minutes","dir":"","previous_headings":"","what":"Exercise (2 minutes)","title":"All in One View","text":"One tables use gaiadr2.panstarrs1_original_valid. Use load_table get metadata table. many columns names?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"triple-quotes-strings","dir":"","previous_headings":"","what":"Triple-quotes strings","title":"All in One View","text":"use triple-quoted string can include line breaks query, makes easier read.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"repetition","dir":"","previous_headings":"","what":"Repetition","title":"All in One View","text":"table repeated three times? first name module, second name submodule, third name class. time care last one. ’s like Linnean name Western lowland gorilla, Gorilla gorilla gorilla.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-3-minutes","dir":"","previous_headings":"","what":"Exercise (3 minutes)","title":"All in One View","text":"Read documentation table choose column looks interesting . Add column name query run . units column selected? data type?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"different-results","dir":"","previous_headings":"","what":"Different results","title":"All in One View","text":"results query may differ Instructor’s. TOP 3000 returns 3000 results, results organized particular way.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"clauses query right order. Go back change order clauses query2 run . modified query fail, notice don’t get much useful debugging information. reason, developing debugging ADQL queries can really hard. suggestions might help: Whenever possible, start working query, either example find online query used past. Make small changes test change continue. debugging, use TOP limit number rows result. make test run faster, reduces development time. Launching test queries synchronously might make start faster, .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes-1","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Read SQL operators modify previous query select rows bp_rp -0.75 2.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-10-minutes","dir":"","previous_headings":"","what":"Exercise (10 minutes)","title":"All in One View","text":"query always selects sources parallax less 1. suppose want take upper bound input. Modify query3_base replace 1 format specifier like {max_parallax}. Now, call format, add keyword argument assigns value max_parallax, confirm format specifier gets replaced value provide.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"All in One View","text":"can’t download entire dataset (practical) use queries select data need. Read metadata documentation make sure understand tables, columns, mean. Develop queries incrementally: start something simple, test , add little bit time. Use ADQL features like TOP COUNT test run query might return lot data. know query return fewer 3000 rows, can run synchronously. might return 3000 rows, run asynchronously. ADQL SQL case-sensitive. don’t capitalize keywords, make code readable. ADQL SQL don’t require break query multiple lines, make code readable. Make section notebook self-contained. Try use variable name one section. Keep notebooks short. Look places can break analysis phases one notebook per phase.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"All in One View","text":"’ll start example “cone search”; , selects stars appear circular region sky. , select stars vicinity GD-1, : Use Quantity objects represent measurements units. Use Astropy convert coordinates one frame another. Use ADQL keywords POLYGON, CONTAINS, POINT select stars fall within polygonal region. Submit query download results. Store results FITS file.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Create quantity represents 5 arcminutes assign variable called radius. convert degrees.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes-1","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"debugging queries like , can use TOP limit size results, still don’t know big results . alternative use COUNT, asks number rows selected, return . previous query, replace TOP 10 source_id COUNT(source_id) run query . many stars Gaia identified cone searched?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"coordinate-variables","dir":"","previous_headings":"","what":"Coordinate Variables","title":"All in One View","text":"Notice Galactic frame, coordinates variables usually use Galactic longitude latitude called l b, respectively, ra dec. reference frames different ways specify coordinates SkyCoord object use names.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-10-minutes","dir":"","previous_headings":"","what":"Exercise (10 minutes)","title":"All in One View","text":"Find location GD-1 ICRS coordinates. Create SkyCoord object 0°, 0° GD-1 frame. Transform ICRS frame. Hint: ICRS standard frame, built Astropy. can specify name, icrs (galactic).","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"All in One View","text":"measurements units, use Quantity objects represent units explicitly check errors. Use format function compose queries; often faster less error-prone. Develop queries incrementally: start something simple, test , add little bit time. query working, save data local file. shut notebook come back later, can reload file; don’t run query .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"All in One View","text":"read back results previous lesson, saved FITS file. transform coordinates proper motion data ICRS back coordinate frame GD-1. put results Pandas DataFrame.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. previous episode, ran query Gaia server, downloaded data roughly 140,000 stars, saved data FITS file. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_results.fits')","code":"import astropy.units as u from astropy.coordinates import SkyCoord from gala.coordinates import GD1Koposov10 from astropy.table import Table  from episode_functions import * filename = 'gd1_results.fits' polygon_results = Table.read(filename)  gd1_frame = GD1Koposov10()"},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"keeping-plots-in-the-notebook","dir":"","previous_headings":"","what":"Keeping plots in the notebook","title":"All in One View","text":"recent versions Jupyter, plots appear “inline”; , part notebook. older versions, plots appear new window. plots appear new window, might want run following Jupyter magic command notebook cell:","code":"%matplotlib inline"},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"call plt.plot, use keyword argument markersize make markers smaller. add keyword argument alpha make markers partly transparent. Adjust arguments think figure shows data clearly. Note: made changes, might notice figure shows stripes lower density stars. stripes caused way Gaia scans sky, can read . dataset using, Gaia Data Release 2, covers 22 months observations; time, parts sky scanned others.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":null,"dir":"","previous_headings":"","what":"Callout","title":"All in One View","text":"Detail notice SkyCoord attribute called proper_motion, might wonder using . : proper_motion contains data pm_phi1_cosphi2 pm_phi2, different format.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"pandas-dataframes-versus-astropy-tables","dir":"","previous_headings":"","what":"Pandas DataFrames versus Astropy Tables","title":"All in One View","text":"Two common choices Pandas DataFrame Astropy Table. Pandas DataFrames Astropy Tables share many characteristics manipulations can done either. become familiar , develop sense one prefer different tasks. instance may choose use Astropy Tables read data, especially astronomy specific data formats, Pandas DataFrames inspect data. Fortunately, Astropy makes easy convert two data types. choose use Pandas DataFrame, two reasons: provides capabilities (almost) superset data structures, --one solution. Pandas general-purpose tool useful many domains, especially data science. going develop expertise one tool, Pandas good choice. However, compared Astropy Table, Pandas one big drawback: keep metadata associated table, including units columns. Nevertheless, think useful data type familiar .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"attributes-vs-functions","dir":"","previous_headings":"","what":"Attributes vs functions","title":"All in One View","text":"shape attribute, display value without calling function. head function, need parentheses.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"All in One View","text":"make scatter plot, adjust size markers transparency figure overplotted; otherwise can misrepresent data badly. simple scatter plots Matplotlib, plot faster scatter. Astropy Table Pandas DataFrame similar many ways provide many functions. pros cons, many projects, either one reasonable choice. store data Pandas DataFrame, good option HDF5 file, can contain multiple Datasets (’ll dig Join lesson).","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"All in One View","text":"put results Pandas DataFrame, use select stars near centerline GD-1. Plotting proper motion stars, identify region proper motion stars likely GD-1. Finally, select plot stars whose proper motion region.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. Previously, ran query Gaia server, downloaded data roughly 140,000 stars, transformed coordinates GD-1 reference frame, saved results HDF5 file (Dataset name results_df). use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"import astropy.units as u import matplotlib.pyplot as plt import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' results_df = pd.read_hdf(filename, 'results_df')"},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-10-minutes","dir":"","previous_headings":"","what":"Exercise (10 minutes)","title":"All in One View","text":"Review summary statistics table. values make sense based know context? see values seem problematic, evidence data issues?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"logical-operators","dir":"","previous_headings":"","what":"Logical operators","title":"All in One View","text":"Python’s logical operators (, , ) work NumPy Pandas. libraries use bitwise operators (&, |, ~) elementwise logical operations (explanation ). Also, need parentheses around conditions; otherwise order operations incorrect.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"going need centerline_df later well. Write line code add second Dataset HDF5 file. Hint: Since file already exists, use mode='w'.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"context-managers","dir":"","previous_headings":"","what":"Context Managers","title":"All in One View","text":"use statement open file print statement (automatically) close . Read context managers.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"All in One View","text":"workflow often prototyped small set data can explored easily used identify ways limit dataset exactly data want. store data Pandas DataFrame, good option HDF5 file, can contain multiple Datasets.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"All in One View","text":"Using data previous episode, identify values proper motion stars likely GD-1. compose ADQL query selects stars based proper motion, can download data need. make possible search bigger region sky single query.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. Previously, ran query Gaia server, downloaded data roughly 140,000 stars, saved data FITS file. selected just stars proper motion GD-1 saved results HDF5 file. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf') defines previously defined quantities:","code":"import astropy.units as u from astropy.coordinates import SkyCoord from astroquery.gaia import Gaia from gala.coordinates import GD1Koposov10, GD1, reflex_correct import matplotlib.pyplot as plt import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' centerline_df = pd.read_hdf(filename, 'centerline_df') selected_df = pd.read_hdf(filename, 'selected_df') pm1_min = -8.9 pm1_max = -6.9 pm2_min = -2.2 pm2_max =  1.0  pm1_rect, pm2_rect = make_rectangle(     pm1_min, pm1_max, pm2_min, pm2_max) gd1_frame = GD1Koposov10()"},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Looking proper motion stars identified along centerline GD-1, ICRS reference frame define rectangle (pmra_min, pmra_max, pmdec_min, pmdec_max) encompass proper motion majority stars near centerline GD-1 without including much contamination stars.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-10-minutes","dir":"","previous_headings":"","what":"Exercise (10 minutes)","title":"All in One View","text":"Define candidate_coord_pm_query_base, starting candidate_coord_query_base adding two new clauses select stars whose coordinates proper motion, pmra pmdec, fall within region defined pmra_min, pmra_max, pmdec_min, pmdec_max. next exercise use format statement fill values defined .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes-1","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Use format format candidate_coord_pm_query_base define candidate_coord_pm_query, filling values columns, sky_point_list, pmra_min, pmra_max, pmdec_min, pmdec_max.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"between-vs-polygon","dir":"","previous_headings":"","what":"BETWEEN vs POLYGON","title":"All in One View","text":"may wondering used proper motion previously used POLYGON coordinates. ADQL intends POLYGON function used coordinates proper motion. enforce , produce error negative value passed first argument.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"performance-warning","dir":"","previous_headings":"","what":"Performance Warning","title":"All in One View","text":"may see previous command issue similar performance warning: Series just created, mixing variables different types: sky_point_list string (text), whereas pmra_min etc. floating point numbers. combining different data types single Series somewhat inefficient, amount data small enough matter case, warning can safely ignored.","code":"[...] PerformanceWarning: your performance may suffer as PyTables will pickle object types that it cannot map directly to c-types [inferred_type->mixed-integer,key->values] [items->None]   point_series.to_hdf(filename, 'point_series')"},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"All in One View","text":"possible, ‘move computation data’; , much work possible database server downloading data.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"All in One View","text":"reload candidate stars identified previous episode. run query Gaia server uploads table candidates uses JOIN operation select photometry data candidate stars. write results file use next episode.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. previous episode, define rectangle around stars GD-1 spatial coordinates proper motion transformed ICRS coordinates created point lists polygon vertices. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"from astroquery.gaia import Gaia import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' point_series = pd.read_hdf(filename, 'point_series') sky_point_list = point_series['sky_point_list'] pmra_min = point_series['pmra_min'] pmra_max = point_series['pmra_max'] pmdec_min = point_series['pmdec_min'] pmdec_max = point_series['pmdec_max'] point_series"},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"a-caveat-about-matching-stars-between-catalogs","dir":"","previous_headings":"","what":"A caveat about matching stars between catalogs","title":"All in One View","text":"general, choosing star Gaia catalog finding corresponding star Pan-STARRS catalog easy. kind cross matching always possible, star might appear one catalog . even stars present, might clear one--one relationship stars two catalogs. Additional catalog matching tools available Astropy coordinates package. Fortunately, people worked problem, Gaia database includes cross-matching tables suggest best neighbor Pan-STARRS catalog many stars Gaia catalog. document describes cross matching process. Briefly, uses cone search find possible matches approximately right position, uses attributes like color magnitude choose pairs observations likely star.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"british-vs-american-spelling-of-neighbour","dir":"","previous_headings":"","what":"British vs American Spelling of Neighbour","title":"All in One View","text":"Gaia database created maintained European Space Astronomy Center. reason, table spellings use British spelling neighbour (“u”). forget include table names queries .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"sql-detail","dir":"","previous_headings":"","what":"SQL detail","title":"All in One View","text":"example, column name tables, replace clause simpler USINGclause:","code":"USING(source_id)"},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-15-minutes","dir":"","previous_headings":"","what":"Exercise (15 minutes)","title":"All in One View","text":"Now ready bring Pan-STARRS table. Starting previous query, add second JOIN clause joins gaiadr2.panstarrs1_original_valid, gives abbreviated name ps, matches original_ext_source_id best neighbor table obj_id Pan-STARRS table. Add g_mean_psf_mag i_mean_psf_mag column list, run query. result contain 490 rows 9 columns.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-15-minutes-1","dir":"","previous_headings":"","what":"Exercise (15 minutes)","title":"All in One View","text":"Create new query base called candidate_join_query_base combines clauses previous query JOIN clauses best neighbor Pan-STARRS tables. Format query base using column names column_list, call result candidate_join_query. Hint: Make sure use qualified column names everywhere! Run query download results. table get 4300 rows 9 columns.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"numpy-mask-warning","dir":"","previous_headings":"","what":"Numpy Mask Warning","title":"All in One View","text":"may see warning ends following phrase: site-packages/numpy/lib/function_base.py:4650: UserWarning: Warning: 'partition' ignore 'mask' MaskedColumn. arr.partition( astroquery returning table masked columns (really fancy masked numpy arrays). turn column pandas Series, maintains mask. Describe calls numpy functions perform statistics. Numpy recently implemented warning let know mask considered calculation performing.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"number-of-neighbors","dir":"","previous_headings":"","what":"Number of neighbors","title":"All in One View","text":"table also contains number_of_neighbours number stars Pan-STARRS match terms position, using criteria choose likely match. interested final match, using criteria.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"All in One View","text":"Use JOIN operations combine data multiple tables database, using kind identifier match records one table records another. another example practice saw previous notebook, moving computation data. applications, saving data FITS HDF5 better CSV. FITS HDF5 binary formats, files usually smaller, store metadata, don’t lose anything read file back. hand, CSV ‘least common denominator’ format; , can read practically application works data.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"All in One View","text":"reload data previous episode make color-magnitude diagram. use isochrone computed MIST specify polygonal region color-magnitude diagram select stars inside .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. previous episode, selected stars GD-1 based proper motion downloaded spatial, proper motion, photometry information joining Gaia PanSTARRs datasets. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"from os.path import getsize  import pandas as pd  from matplotlib import pyplot as plt  from episode_functions import * filename = 'gd1_data.hdf' candidate_df = pd.read_hdf(filename, 'candidate_df')"},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"a-slight-detour-for-non-domain-experts","dir":"","previous_headings":"","what":"A slight detour for non-domain experts","title":"All in One View","text":"wondering (non-domain expert) interpret color-magnitude diagram, please expand section . pathologist can easily point tumor biopsy slide, can astronomers study stellar populations see two stellar main groups stars color magnitude diagram, one old star cluster (presumably, GD-1), , stars much closer, every distance Earth cluster (“foreground”). color magnitude diagram technique developed separate features just pathologists techniques contrast human tissue. color star primarily related star’s surface temperature, bluer stars indicating higher temperatures redder stars indicating lower temperatures. logic far color bottom match flame compared top. Foreground Stars: know temperature star, first need know distance account dust us star. can guess effect distance. star farther away fainter (lower y-axis value) star closer (think car headlights approach). Dust remove light star’s path telescopes, makes star seem like less energy otherwise , makes two things diagram: 1) look fainter (lower y-axis value) 2) look cooler (higher x-axis value). stars spread throughout diagram stars bright enough detected Milky Way GD-1 us made fainter redder (spread lower-right) spread distance us amount dust line sight. GD-1: pile stars lower-left quadrant diagram interesting suggests something distance amount dust way. use knowledge theoretical astrophysics (independently calculated outside work) estimate bright population old stars distance GD-1, get solid red line. exact values age metallicity ([Fe/H] value) variable needed reproduce theoretical isochrone, frankly, choice vary lot still fit data well. color-magnitude diagrams theoretical counterpart, .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"calculating-isochrone","dir":"","previous_headings":"","what":"Calculating Isochrone","title":"All in One View","text":"fact, can use MESA Isochrones & Stellar Tracks (MIST) compute us. Using MIST Version 1.2 web interface, computed isochrone following parameters: Rotation initial v/v_crit = 0.4 Single age, linear scale = 12e9 Composition [Fe/H] = -1.35 Synthetic Photometry, PanStarrs Extinction av = 0","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"encounter new object, good create toy example test think . Define list two points (represented two tuples), one inside polygon one outside polygon. Call contains_points polygon just created, passing list points defined, verify results expected.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes-1","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Boolean values stored 0s 1s. FALSE = 0 TRUE = 1. Use information determine number stars fall inside polygon.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"All in One View","text":"Matplotlib provides operations working points, polygons, geometric entities, just making figures. Use Matplotlib options control size aspect ratio figures make easier interpret. Record every element data analysis pipeline needed replicate results.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"outline","dir":"","previous_headings":"","what":"Outline","title":"All in One View","text":"Starting figure previous episode, add annotations present results clearly. learn several ways customize figures make appealing effective. Finally, learn make figure multiple panels.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"starting-from-this-episode","dir":"","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. previous episode, selected stars GD-1 based proper motion downloaded spatial, proper motion, photometry information joining Gaia PanSTARRs datasets. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf') defines previously defined quantities:","code":"import pandas as pd import numpy as np from matplotlib import pyplot as plt from matplotlib.patches import Polygon  from episode_functions import * filename = 'gd1_data.hdf' winner_df = pd.read_hdf(filename, 'winner_df')  centerline_df = pd.read_hdf(filename, 'centerline_df') candidate_df = pd.read_hdf(filename, 'candidate_df') loop_df = pd.read_hdf(filename, 'loop_df') pm1_min = -8.9 pm1_max = -6.9 pm2_min = -2.2 pm2_max =  1.0  pm1_rect, pm2_rect = make_rectangle(     pm1_min, pm1_max, pm2_min, pm2_max)"},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-10-minutes","dir":"","previous_headings":"","what":"Exercise (10 minutes)","title":"All in One View","text":"Think following questions: primary scientific result work? story figure telling? design figure, can identify 1 2 choices authors made think effective? Think big-picture elements, like number panels arranged, well details like choice typeface. Can identify 1 2 elements improved, might done differently?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-20-minutes","dir":"","previous_headings":"","what":"Exercise (20 minutes)","title":"All in One View","text":"Plot selected stars winner_df using plot_cmd_selection function choose features add figure: draw vertical lines, see plt.vlines plt.axvline. add text, see plt.text. add annotation text arrow, see plt.annotate. additional information text arrows.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"note-on-accessibility","dir":"","previous_headings":"","what":"Note on Accessibility","title":"All in One View","text":"Customization offers high degree personalization creating scientific visualizations. important also create accessible visualizations broad audience may include low-vision color-blind individuals. AAS Journals provide Graphics Guide authors tips external links can help produce accessible graphics: https://journals.aas.org/graphics-guide/","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"subplot-and-axes","dir":"","previous_headings":"","what":"subplot and axes","title":"All in One View","text":"Confusingly, Matplotlib objects subplot axes often used interchangeably. subplot axes object additional methods attributes.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Read documentation tick_params use put ticks top right sides axes.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes-1","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Plot previous figure , see font sizes changed. Look element rcParams, change value, check effect figure.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"return-to-default","dir":"","previous_headings":"","what":"Return to Default","title":"All in One View","text":"switch back default style use","code":"plt.style.use('default')"},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes-2","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Choose one styles list select calling use. go back plot one previous figures see changes figure’s appearance.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes-3","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"happens leave tight_layout?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes-4","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"example, ratio widths panels 3:1. adjust wanted ratio 3:2?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes-5","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Add lines run plot_cmd function show polygon selected shaded area. Hint: pass loop_df argument Polygon episode 7 plot using add_patch.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":"exercise-5-minutes-6","dir":"","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Add Polygon patches just created right panels four panel figure.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/aio.html","id":null,"dir":"","previous_headings":"","what":"Keypoints","title":"All in One View","text":"Effective figures focus telling single story clearly authentically. major decisions needed creating effective summary figure like one can done away computer built low fidelity (hand drawn) high (tweaking rcParams, etc.). Consider using annotations guide reader’s attention important elements figure, keeping mind accessiblity issues detail may introduce. default Matplotlib style generates good quality figures, several ways can override defaults. find making customizations several projects, might want create style sheet.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/calculating_MIST_isochrone.html","id":"calculating-isochrone","dir":"","previous_headings":"","what":"Calculating Isochrone","title":"Making the Isochrone DataFrame","text":"fact, can use MESA Isochrones & Stellar Tracks (MIST) compute us. Using MIST Version 1.2 web interface, computed isochrone following parameters: Rotation initial v/v_crit = 0.4 Single age, linear scale = 12e9 Composition [Fe/H] = -1.35 Synthetic Photometry, PanStarrs Extinction av = 0","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Summary and Setup","text":"lesson assumes working knowledge Python previous exposure Bash shell. requirements can fulfilled : ) completing Software Carpentry Python workshop b) completing Data Carpentry Ecology workshop (Python) Data Carpentry Genomics workshop c) independent exposure Python Bash shell. ’re unsure whether enough experience participate workshop, please read detailed list, gives functions, operators, concepts need familiar . addition, lesson assumes learners familiarity astronomical concepts, including reference frames, proper motion, color-magnitude diagrams, globular clusters, isochrones. Participants bring laptops plan participate actively.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/index.html","id":"anaconda","dir":"","previous_headings":"","what":"Anaconda","title":"Summary and Setup","text":"Download install Anaconda. create new Conda environment, includes additional packages using workshop, need environment file (environment.yml) downloaded data section. Terminal Jupyter Prompt, make sure student_download directory, environment.yml stored, run: , activate environment just created, run:","code":"conda env create -f environment.yml conda activate AstronomicalData"},{"path":"https://ErinBecker.github.io/astronomy-python/index.html","id":"jupyter","dir":"","previous_headings":"","what":"Jupyter","title":"Summary and Setup","text":"test environment setup using test notebook (test_setup.ipynb) downloaded data section. Terminal, Jupyter Prompt Anaconda Prompt, make sure student_download directory. start Jupyter, make sure activated new conda environment, run: notebook open automatically browser. wish use different browser, open link: http://localhost:8888. Now open notebook downloaded, test_setup.ipynb, read instructions . Make sure run cells contain import statements. work get error messages, ready workshop. Please contact instructors experience problems installation instructions. working materials independently, let us know problems encounter filing issue lesson’s GitHub repository emailing team@carpentries.org.","code":"jupyter notebook"},{"path":"https://ErinBecker.github.io/astronomy-python/index.html","id":"why-didnt-the-imports-work","dir":"","previous_headings":"","what":"Why didn’t the imports work?","title":"Summary and Setup","text":"Occasionally learners need take one additional step make Jupyter run within environment created. imports fail, close Jupyter closing terminal, try running following Anaconda prompt ( Terminal otherwise): start Jupyter : time, open notebook, navigate Kernel menu –> Change Kernel –> select AstronomicalData . ensure relevant packages available. can seek installation help looks confusing!","code":"python -m ipykernel install --user --name=AstronomicalData jupyter notebook"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/01-query.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"Basic Queries","text":"episode demonstrates steps selecting downloading data Gaia Database: First make connection Gaia server, explore information database tables contains, write query send server, finally download response server.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/01-query.html","id":"old-versions-of-astroquery-output","dir":"Instructor","previous_headings":"","what":"Old versions of astroquery output","title":"Basic Queries","text":"using version astroquery ’s older v0.4.4, may see output","code":"Created TAP+ (v1.2.1) - Connection: \tHost: gea.esac.esa.int \tUse HTTPS: True \tPort: 443 \tSSL Port: 443 Created TAP+ (v1.2.1) - Connection: \tHost: geadata.esac.esa.int \tUse HTTPS: True \tPort: 443 \tSSL Port: 443"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/01-query.html","id":"exercise-2-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (2 minutes)","title":"Basic Queries","text":"One tables use gaiadr2.panstarrs1_original_valid. Use load_table get metadata table. many columns names?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/01-query.html","id":"triple-quotes-strings","dir":"Instructor","previous_headings":"","what":"Triple-quotes strings","title":"Basic Queries","text":"use triple-quoted string can include line breaks query, makes easier read.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/01-query.html","id":"repetition","dir":"Instructor","previous_headings":"","what":"Repetition","title":"Basic Queries","text":"table repeated three times? first name module, second name submodule, third name class. time care last one. ’s like Linnean name Western lowland gorilla, Gorilla gorilla gorilla.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/01-query.html","id":"exercise-3-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (3 minutes)","title":"Basic Queries","text":"Read documentation table choose column looks interesting . Add column name query run . units column selected? data type?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/01-query.html","id":"different-results","dir":"Instructor","previous_headings":"","what":"Different results","title":"Basic Queries","text":"results query may differ Instructor’s. TOP 3000 returns 3000 results, results organized particular way.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/01-query.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Basic Queries","text":"clauses query right order. Go back change order clauses query2 run . modified query fail, notice don’t get much useful debugging information. reason, developing debugging ADQL queries can really hard. suggestions might help: Whenever possible, start working query, either example find online query used past. Make small changes test change continue. debugging, use TOP limit number rows result. make test run faster, reduces development time. Launching test queries synchronously might make start faster, .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/01-query.html","id":"exercise-5-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Basic Queries","text":"Read SQL operators modify previous query select rows bp_rp -0.75 2.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/01-query.html","id":"exercise-10-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (10 minutes)","title":"Basic Queries","text":"query always selects sources parallax less 1. suppose want take upper bound input. Modify query3_base replace 1 format specifier like {max_parallax}. Now, call format, add keyword argument assigns value max_parallax, confirm format specifier gets replaced value provide.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/01-query.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"Basic Queries","text":"can’t download entire dataset (practical) use queries select data need. Read metadata documentation make sure understand tables, columns, mean. Develop queries incrementally: start something simple, test , add little bit time. Use ADQL features like TOP COUNT test run query might return lot data. know query return fewer 3000 rows, can run synchronously. might return 3000 rows, run asynchronously. ADQL SQL case-sensitive. don’t capitalize keywords, make code readable. ADQL SQL don’t require break query multiple lines, make code readable. Make section notebook self-contained. Try use variable name one section. Keep notebooks short. Look places can break analysis phases one notebook per phase.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/02-coords.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"Coordinate Transformations","text":"’ll start example “cone search”; , selects stars appear circular region sky. , select stars vicinity GD-1, : Use Quantity objects represent measurements units. Use Astropy convert coordinates one frame another. Use ADQL keywords POLYGON, CONTAINS, POINT select stars fall within polygonal region. Submit query download results. Store results FITS file.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/02-coords.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Coordinate Transformations","text":"Create quantity represents 5 arcminutes assign variable called radius. convert degrees.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/02-coords.html","id":"exercise-5-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Coordinate Transformations","text":"debugging queries like , can use TOP limit size results, still don’t know big results . alternative use COUNT, asks number rows selected, return . previous query, replace TOP 10 source_id COUNT(source_id) run query . many stars Gaia identified cone searched?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/02-coords.html","id":"coordinate-variables","dir":"Instructor","previous_headings":"","what":"Coordinate Variables","title":"Coordinate Transformations","text":"Notice Galactic frame, coordinates variables usually use Galactic longitude latitude called l b, respectively, ra dec. reference frames different ways specify coordinates SkyCoord object use names.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/02-coords.html","id":"exercise-10-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (10 minutes)","title":"Coordinate Transformations","text":"Find location GD-1 ICRS coordinates. Create SkyCoord object 0°, 0° GD-1 frame. Transform ICRS frame. Hint: ICRS standard frame, built Astropy. can specify name, icrs (galactic).","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/02-coords.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"Coordinate Transformations","text":"measurements units, use Quantity objects represent units explicitly check errors. Use format function compose queries; often faster less error-prone. Develop queries incrementally: start something simple, test , add little bit time. query working, save data local file. shut notebook come back later, can reload file; don’t run query .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/03-transform.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"Plotting and Tabular Data","text":"read back results previous lesson, saved FITS file. transform coordinates proper motion data ICRS back coordinate frame GD-1. put results Pandas DataFrame.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/03-transform.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"Plotting and Tabular Data","text":"starting new notebook episode, expand section information need get started. previous episode, ran query Gaia server, downloaded data roughly 140,000 stars, saved data FITS file. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_results.fits')","code":"import astropy.units as u from astropy.coordinates import SkyCoord from gala.coordinates import GD1Koposov10 from astropy.table import Table  from episode_functions import * filename = 'gd1_results.fits' polygon_results = Table.read(filename)  gd1_frame = GD1Koposov10()"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/03-transform.html","id":"keeping-plots-in-the-notebook","dir":"Instructor","previous_headings":"","what":"Keeping plots in the notebook","title":"Plotting and Tabular Data","text":"recent versions Jupyter, plots appear “inline”; , part notebook. older versions, plots appear new window. plots appear new window, might want run following Jupyter magic command notebook cell:","code":"%matplotlib inline"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/03-transform.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Plotting and Tabular Data","text":"call plt.plot, use keyword argument markersize make markers smaller. add keyword argument alpha make markers partly transparent. Adjust arguments think figure shows data clearly. Note: made changes, might notice figure shows stripes lower density stars. stripes caused way Gaia scans sky, can read . dataset using, Gaia Data Release 2, covers 22 months observations; time, parts sky scanned others.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/03-transform.html","id":null,"dir":"Instructor","previous_headings":"","what":"Callout","title":"Plotting and Tabular Data","text":"Detail notice SkyCoord attribute called proper_motion, might wonder using . : proper_motion contains data pm_phi1_cosphi2 pm_phi2, different format.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/03-transform.html","id":"pandas-dataframes-versus-astropy-tables","dir":"Instructor","previous_headings":"","what":"Pandas DataFrames versus Astropy Tables","title":"Plotting and Tabular Data","text":"Two common choices Pandas DataFrame Astropy Table. Pandas DataFrames Astropy Tables share many characteristics manipulations can done either. become familiar , develop sense one prefer different tasks. instance may choose use Astropy Tables read data, especially astronomy specific data formats, Pandas DataFrames inspect data. Fortunately, Astropy makes easy convert two data types. choose use Pandas DataFrame, two reasons: provides capabilities (almost) superset data structures, --one solution. Pandas general-purpose tool useful many domains, especially data science. going develop expertise one tool, Pandas good choice. However, compared Astropy Table, Pandas one big drawback: keep metadata associated table, including units columns. Nevertheless, think useful data type familiar .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/03-transform.html","id":"attributes-vs-functions","dir":"Instructor","previous_headings":"","what":"Attributes vs functions","title":"Plotting and Tabular Data","text":"shape attribute, display value without calling function. head function, need parentheses.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/03-transform.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"Plotting and Tabular Data","text":"make scatter plot, adjust size markers transparency figure overplotted; otherwise can misrepresent data badly. simple scatter plots Matplotlib, plot faster scatter. Astropy Table Pandas DataFrame similar many ways provide many functions. pros cons, many projects, either one reasonable choice. store data Pandas DataFrame, good option HDF5 file, can contain multiple Datasets (’ll dig Join lesson).","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/04-motion.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"Plotting and Pandas","text":"put results Pandas DataFrame, use select stars near centerline GD-1. Plotting proper motion stars, identify region proper motion stars likely GD-1. Finally, select plot stars whose proper motion region.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/04-motion.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"Plotting and Pandas","text":"starting new notebook episode, expand section information need get started. Previously, ran query Gaia server, downloaded data roughly 140,000 stars, transformed coordinates GD-1 reference frame, saved results HDF5 file (Dataset name results_df). use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"import astropy.units as u import matplotlib.pyplot as plt import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' results_df = pd.read_hdf(filename, 'results_df')"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/04-motion.html","id":"exercise-10-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (10 minutes)","title":"Plotting and Pandas","text":"Review summary statistics table. values make sense based know context? see values seem problematic, evidence data issues?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/04-motion.html","id":"logical-operators","dir":"Instructor","previous_headings":"","what":"Logical operators","title":"Plotting and Pandas","text":"Python’s logical operators (, , ) work NumPy Pandas. libraries use bitwise operators (&, |, ~) elementwise logical operations (explanation ). Also, need parentheses around conditions; otherwise order operations incorrect.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/04-motion.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Plotting and Pandas","text":"going need centerline_df later well. Write line code add second Dataset HDF5 file. Hint: Since file already exists, use mode='w'.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/04-motion.html","id":"context-managers","dir":"Instructor","previous_headings":"","what":"Context Managers","title":"Plotting and Pandas","text":"use statement open file print statement (automatically) close . Read context managers.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/04-motion.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"Plotting and Pandas","text":"workflow often prototyped small set data can explored easily used identify ways limit dataset exactly data want. store data Pandas DataFrame, good option HDF5 file, can contain multiple Datasets.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/05-select.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"Transform and Select","text":"Using data previous episode, identify values proper motion stars likely GD-1. compose ADQL query selects stars based proper motion, can download data need. make possible search bigger region sky single query.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/05-select.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"Transform and Select","text":"starting new notebook episode, expand section information need get started. Previously, ran query Gaia server, downloaded data roughly 140,000 stars, saved data FITS file. selected just stars proper motion GD-1 saved results HDF5 file. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf') defines previously defined quantities:","code":"import astropy.units as u from astropy.coordinates import SkyCoord from astroquery.gaia import Gaia from gala.coordinates import GD1Koposov10, GD1, reflex_correct import matplotlib.pyplot as plt import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' centerline_df = pd.read_hdf(filename, 'centerline_df') selected_df = pd.read_hdf(filename, 'selected_df') pm1_min = -8.9 pm1_max = -6.9 pm2_min = -2.2 pm2_max =  1.0  pm1_rect, pm2_rect = make_rectangle(     pm1_min, pm1_max, pm2_min, pm2_max) gd1_frame = GD1Koposov10()"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/05-select.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Transform and Select","text":"Looking proper motion stars identified along centerline GD-1, ICRS reference frame define rectangle (pmra_min, pmra_max, pmdec_min, pmdec_max) encompass proper motion majority stars near centerline GD-1 without including much contamination stars.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/05-select.html","id":"exercise-10-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (10 minutes)","title":"Transform and Select","text":"Define candidate_coord_pm_query_base, starting candidate_coord_query_base adding two new clauses select stars whose coordinates proper motion, pmra pmdec, fall within region defined pmra_min, pmra_max, pmdec_min, pmdec_max. next exercise use format statement fill values defined .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/05-select.html","id":"exercise-5-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Transform and Select","text":"Use format format candidate_coord_pm_query_base define candidate_coord_pm_query, filling values columns, sky_point_list, pmra_min, pmra_max, pmdec_min, pmdec_max.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/05-select.html","id":"between-vs-polygon","dir":"Instructor","previous_headings":"","what":"BETWEEN vs POLYGON","title":"Transform and Select","text":"may wondering used proper motion previously used POLYGON coordinates. ADQL intends POLYGON function used coordinates proper motion. enforce , produce error negative value passed first argument.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/05-select.html","id":"performance-warning","dir":"Instructor","previous_headings":"","what":"Performance Warning","title":"Transform and Select","text":"may see previous command issue similar performance warning: Series just created, mixing variables different types: sky_point_list string (text), whereas pmra_min etc. floating point numbers. combining different data types single Series somewhat inefficient, amount data small enough matter case, warning can safely ignored.","code":"[...] PerformanceWarning: your performance may suffer as PyTables will pickle object types that it cannot map directly to c-types [inferred_type->mixed-integer,key->values] [items->None]   point_series.to_hdf(filename, 'point_series')"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/05-select.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"Transform and Select","text":"possible, ‘move computation data’; , much work possible database server downloading data.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/06-join.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"Join","text":"reload candidate stars identified previous episode. run query Gaia server uploads table candidates uses JOIN operation select photometry data candidate stars. write results file use next episode.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/06-join.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"Join","text":"starting new notebook episode, expand section information need get started. previous episode, define rectangle around stars GD-1 spatial coordinates proper motion transformed ICRS coordinates created point lists polygon vertices. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"from astroquery.gaia import Gaia import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' point_series = pd.read_hdf(filename, 'point_series') sky_point_list = point_series['sky_point_list'] pmra_min = point_series['pmra_min'] pmra_max = point_series['pmra_max'] pmdec_min = point_series['pmdec_min'] pmdec_max = point_series['pmdec_max'] point_series"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/06-join.html","id":"a-caveat-about-matching-stars-between-catalogs","dir":"Instructor","previous_headings":"","what":"A caveat about matching stars between catalogs","title":"Join","text":"general, choosing star Gaia catalog finding corresponding star Pan-STARRS catalog easy. kind cross matching always possible, star might appear one catalog . even stars present, might clear one--one relationship stars two catalogs. Additional catalog matching tools available Astropy coordinates package. Fortunately, people worked problem, Gaia database includes cross-matching tables suggest best neighbor Pan-STARRS catalog many stars Gaia catalog. document describes cross matching process. Briefly, uses cone search find possible matches approximately right position, uses attributes like color magnitude choose pairs observations likely star.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/06-join.html","id":"british-vs-american-spelling-of-neighbour","dir":"Instructor","previous_headings":"","what":"British vs American Spelling of Neighbour","title":"Join","text":"Gaia database created maintained European Space Astronomy Center. reason, table spellings use British spelling neighbour (“u”). forget include table names queries .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/06-join.html","id":"sql-detail","dir":"Instructor","previous_headings":"","what":"SQL detail","title":"Join","text":"example, column name tables, replace clause simpler USINGclause:","code":"USING(source_id)"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/06-join.html","id":"exercise-15-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (15 minutes)","title":"Join","text":"Now ready bring Pan-STARRS table. Starting previous query, add second JOIN clause joins gaiadr2.panstarrs1_original_valid, gives abbreviated name ps, matches original_ext_source_id best neighbor table obj_id Pan-STARRS table. Add g_mean_psf_mag i_mean_psf_mag column list, run query. result contain 490 rows 9 columns.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/06-join.html","id":"exercise-15-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (15 minutes)","title":"Join","text":"Create new query base called candidate_join_query_base combines clauses previous query JOIN clauses best neighbor Pan-STARRS tables. Format query base using column names column_list, call result candidate_join_query. Hint: Make sure use qualified column names everywhere! Run query download results. table get 4300 rows 9 columns.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/06-join.html","id":"numpy-mask-warning","dir":"Instructor","previous_headings":"","what":"Numpy Mask Warning","title":"Join","text":"may see warning ends following phrase: site-packages/numpy/lib/function_base.py:4650: UserWarning: Warning: 'partition' ignore 'mask' MaskedColumn. arr.partition( astroquery returning table masked columns (really fancy masked numpy arrays). turn column pandas Series, maintains mask. Describe calls numpy functions perform statistics. Numpy recently implemented warning let know mask considered calculation performing.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/06-join.html","id":"number-of-neighbors","dir":"Instructor","previous_headings":"","what":"Number of neighbors","title":"Join","text":"table also contains number_of_neighbours number stars Pan-STARRS match terms position, using criteria choose likely match. interested final match, using criteria.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/06-join.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"Join","text":"Use JOIN operations combine data multiple tables database, using kind identifier match records one table records another. another example practice saw previous notebook, moving computation data. applications, saving data FITS HDF5 better CSV. FITS HDF5 binary formats, files usually smaller, store metadata, don’t lose anything read file back. hand, CSV ‘least common denominator’ format; , can read practically application works data.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/07-photo.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"Photometry","text":"reload data previous episode make color-magnitude diagram. use isochrone computed MIST specify polygonal region color-magnitude diagram select stars inside .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/07-photo.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"Photometry","text":"starting new notebook episode, expand section information need get started. previous episode, selected stars GD-1 based proper motion downloaded spatial, proper motion, photometry information joining Gaia PanSTARRs datasets. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"from os.path import getsize  import pandas as pd  from matplotlib import pyplot as plt  from episode_functions import * filename = 'gd1_data.hdf' candidate_df = pd.read_hdf(filename, 'candidate_df')"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/07-photo.html","id":"a-slight-detour-for-non-domain-experts","dir":"Instructor","previous_headings":"","what":"A slight detour for non-domain experts","title":"Photometry","text":"wondering (non-domain expert) interpret color-magnitude diagram, please expand section . pathologist can easily point tumor biopsy slide, can astronomers study stellar populations see two stellar main groups stars color magnitude diagram, one old star cluster (presumably, GD-1), , stars much closer, every distance Earth cluster (“foreground”). color magnitude diagram technique developed separate features just pathologists techniques contrast human tissue. color star primarily related star’s surface temperature, bluer stars indicating higher temperatures redder stars indicating lower temperatures. logic far color bottom match flame compared top. Foreground Stars: know temperature star, first need know distance account dust us star. can guess effect distance. star farther away fainter (lower y-axis value) star closer (think car headlights approach). Dust remove light star’s path telescopes, makes star seem like less energy otherwise , makes two things diagram: 1) look fainter (lower y-axis value) 2) look cooler (higher x-axis value). stars spread throughout diagram stars bright enough detected Milky Way GD-1 us made fainter redder (spread lower-right) spread distance us amount dust line sight. GD-1: pile stars lower-left quadrant diagram interesting suggests something distance amount dust way. use knowledge theoretical astrophysics (independently calculated outside work) estimate bright population old stars distance GD-1, get solid red line. exact values age metallicity ([Fe/H] value) variable needed reproduce theoretical isochrone, frankly, choice vary lot still fit data well. color-magnitude diagrams theoretical counterpart, .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/07-photo.html","id":"calculating-isochrone","dir":"Instructor","previous_headings":"","what":"Calculating Isochrone","title":"Photometry","text":"fact, can use MESA Isochrones & Stellar Tracks (MIST) compute us. Using MIST Version 1.2 web interface, computed isochrone following parameters: Rotation initial v/v_crit = 0.4 Single age, linear scale = 12e9 Composition [Fe/H] = -1.35 Synthetic Photometry, PanStarrs Extinction av = 0","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/07-photo.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Photometry","text":"encounter new object, good create toy example test think . Define list two points (represented two tuples), one inside polygon one outside polygon. Call contains_points polygon just created, passing list points defined, verify results expected.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/07-photo.html","id":"exercise-5-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Photometry","text":"Boolean values stored 0s 1s. FALSE = 0 TRUE = 1. Use information determine number stars fall inside polygon.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/07-photo.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"Photometry","text":"Matplotlib provides operations working points, polygons, geometric entities, just making figures. Use Matplotlib options control size aspect ratio figures make easier interpret. Record every element data analysis pipeline needed replicate results.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"Visualization","text":"Starting figure previous episode, add annotations present results clearly. learn several ways customize figures make appealing effective. Finally, learn make figure multiple panels.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"Visualization","text":"starting new notebook episode, expand section information need get started. previous episode, selected stars GD-1 based proper motion downloaded spatial, proper motion, photometry information joining Gaia PanSTARRs datasets. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf') defines previously defined quantities:","code":"import pandas as pd import numpy as np from matplotlib import pyplot as plt from matplotlib.patches import Polygon  from episode_functions import * filename = 'gd1_data.hdf' winner_df = pd.read_hdf(filename, 'winner_df')  centerline_df = pd.read_hdf(filename, 'centerline_df') candidate_df = pd.read_hdf(filename, 'candidate_df') loop_df = pd.read_hdf(filename, 'loop_df') pm1_min = -8.9 pm1_max = -6.9 pm2_min = -2.2 pm2_max =  1.0  pm1_rect, pm2_rect = make_rectangle(     pm1_min, pm1_max, pm2_min, pm2_max)"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"exercise-10-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (10 minutes)","title":"Visualization","text":"Think following questions: primary scientific result work? story figure telling? design figure, can identify 1 2 choices authors made think effective? Think big-picture elements, like number panels arranged, well details like choice typeface. Can identify 1 2 elements improved, might done differently?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"exercise-20-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (20 minutes)","title":"Visualization","text":"Plot selected stars winner_df using plot_cmd_selection function choose features add figure: draw vertical lines, see plt.vlines plt.axvline. add text, see plt.text. add annotation text arrow, see plt.annotate. additional information text arrows.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"note-on-accessibility","dir":"Instructor","previous_headings":"","what":"Note on Accessibility","title":"Visualization","text":"Customization offers high degree personalization creating scientific visualizations. important also create accessible visualizations broad audience may include low-vision color-blind individuals. AAS Journals provide Graphics Guide authors tips external links can help produce accessible graphics: https://journals.aas.org/graphics-guide/","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"subplot-and-axes","dir":"Instructor","previous_headings":"","what":"subplot and axes","title":"Visualization","text":"Confusingly, Matplotlib objects subplot axes often used interchangeably. subplot axes object additional methods attributes.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"Read documentation tick_params use put ticks top right sides axes.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"exercise-5-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"Plot previous figure , see font sizes changed. Look element rcParams, change value, check effect figure.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"return-to-default","dir":"Instructor","previous_headings":"","what":"Return to Default","title":"Visualization","text":"switch back default style use","code":"plt.style.use('default')"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"exercise-5-minutes-2","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"Choose one styles list select calling use. go back plot one previous figures see changes figure’s appearance.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"exercise-5-minutes-3","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"happens leave tight_layout?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"exercise-5-minutes-4","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"example, ratio widths panels 3:1. adjust wanted ratio 3:2?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"exercise-5-minutes-5","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"Add lines run plot_cmd function show polygon selected shaded area. Hint: pass loop_df argument Polygon episode 7 plot using add_patch.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":"exercise-5-minutes-6","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"Visualization","text":"Add Polygon patches just created right panels four panel figure.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/08-plot.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"Visualization","text":"Effective figures focus telling single story clearly authentically. major decisions needed creating effective summary figure like one can done away computer built low fidelity (hand drawn) high (tweaking rcParams, etc.). Consider using annotations guide reader’s attention important elements figure, keeping mind accessiblity issues detail may introduce. default Matplotlib style generates good quality figures, several ways can override defaults. find making customizations several projects, might want create style sheet.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"All in One View","text":"episode demonstrates steps selecting downloading data Gaia Database: First make connection Gaia server, explore information database tables contains, write query send server, finally download response server.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"old-versions-of-astroquery-output","dir":"Instructor","previous_headings":"","what":"Old versions of astroquery output","title":"All in One View","text":"using version astroquery ’s older v0.4.4, may see output","code":"Created TAP+ (v1.2.1) - Connection: \tHost: gea.esac.esa.int \tUse HTTPS: True \tPort: 443 \tSSL Port: 443 Created TAP+ (v1.2.1) - Connection: \tHost: geadata.esac.esa.int \tUse HTTPS: True \tPort: 443 \tSSL Port: 443"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-2-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (2 minutes)","title":"All in One View","text":"One tables use gaiadr2.panstarrs1_original_valid. Use load_table get metadata table. many columns names?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"triple-quotes-strings","dir":"Instructor","previous_headings":"","what":"Triple-quotes strings","title":"All in One View","text":"use triple-quoted string can include line breaks query, makes easier read.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"repetition","dir":"Instructor","previous_headings":"","what":"Repetition","title":"All in One View","text":"table repeated three times? first name module, second name submodule, third name class. time care last one. ’s like Linnean name Western lowland gorilla, Gorilla gorilla gorilla.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-3-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (3 minutes)","title":"All in One View","text":"Read documentation table choose column looks interesting . Add column name query run . units column selected? data type?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"different-results","dir":"Instructor","previous_headings":"","what":"Different results","title":"All in One View","text":"results query may differ Instructor’s. TOP 3000 returns 3000 results, results organized particular way.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"clauses query right order. Go back change order clauses query2 run . modified query fail, notice don’t get much useful debugging information. reason, developing debugging ADQL queries can really hard. suggestions might help: Whenever possible, start working query, either example find online query used past. Make small changes test change continue. debugging, use TOP limit number rows result. make test run faster, reduces development time. Launching test queries synchronously might make start faster, .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Read SQL operators modify previous query select rows bp_rp -0.75 2.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-10-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (10 minutes)","title":"All in One View","text":"query always selects sources parallax less 1. suppose want take upper bound input. Modify query3_base replace 1 format specifier like {max_parallax}. Now, call format, add keyword argument assigns value max_parallax, confirm format specifier gets replaced value provide.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"All in One View","text":"can’t download entire dataset (practical) use queries select data need. Read metadata documentation make sure understand tables, columns, mean. Develop queries incrementally: start something simple, test , add little bit time. Use ADQL features like TOP COUNT test run query might return lot data. know query return fewer 3000 rows, can run synchronously. might return 3000 rows, run asynchronously. ADQL SQL case-sensitive. don’t capitalize keywords, make code readable. ADQL SQL don’t require break query multiple lines, make code readable. Make section notebook self-contained. Try use variable name one section. Keep notebooks short. Look places can break analysis phases one notebook per phase.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"All in One View","text":"’ll start example “cone search”; , selects stars appear circular region sky. , select stars vicinity GD-1, : Use Quantity objects represent measurements units. Use Astropy convert coordinates one frame another. Use ADQL keywords POLYGON, CONTAINS, POINT select stars fall within polygonal region. Submit query download results. Store results FITS file.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Create quantity represents 5 arcminutes assign variable called radius. convert degrees.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"debugging queries like , can use TOP limit size results, still don’t know big results . alternative use COUNT, asks number rows selected, return . previous query, replace TOP 10 source_id COUNT(source_id) run query . many stars Gaia identified cone searched?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"coordinate-variables","dir":"Instructor","previous_headings":"","what":"Coordinate Variables","title":"All in One View","text":"Notice Galactic frame, coordinates variables usually use Galactic longitude latitude called l b, respectively, ra dec. reference frames different ways specify coordinates SkyCoord object use names.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-10-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (10 minutes)","title":"All in One View","text":"Find location GD-1 ICRS coordinates. Create SkyCoord object 0°, 0° GD-1 frame. Transform ICRS frame. Hint: ICRS standard frame, built Astropy. can specify name, icrs (galactic).","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"All in One View","text":"measurements units, use Quantity objects represent units explicitly check errors. Use format function compose queries; often faster less error-prone. Develop queries incrementally: start something simple, test , add little bit time. query working, save data local file. shut notebook come back later, can reload file; don’t run query .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"All in One View","text":"read back results previous lesson, saved FITS file. transform coordinates proper motion data ICRS back coordinate frame GD-1. put results Pandas DataFrame.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. previous episode, ran query Gaia server, downloaded data roughly 140,000 stars, saved data FITS file. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_results.fits')","code":"import astropy.units as u from astropy.coordinates import SkyCoord from gala.coordinates import GD1Koposov10 from astropy.table import Table  from episode_functions import * filename = 'gd1_results.fits' polygon_results = Table.read(filename)  gd1_frame = GD1Koposov10()"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"keeping-plots-in-the-notebook","dir":"Instructor","previous_headings":"","what":"Keeping plots in the notebook","title":"All in One View","text":"recent versions Jupyter, plots appear “inline”; , part notebook. older versions, plots appear new window. plots appear new window, might want run following Jupyter magic command notebook cell:","code":"%matplotlib inline"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"call plt.plot, use keyword argument markersize make markers smaller. add keyword argument alpha make markers partly transparent. Adjust arguments think figure shows data clearly. Note: made changes, might notice figure shows stripes lower density stars. stripes caused way Gaia scans sky, can read . dataset using, Gaia Data Release 2, covers 22 months observations; time, parts sky scanned others.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":null,"dir":"Instructor","previous_headings":"","what":"Callout","title":"All in One View","text":"Detail notice SkyCoord attribute called proper_motion, might wonder using . : proper_motion contains data pm_phi1_cosphi2 pm_phi2, different format.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"pandas-dataframes-versus-astropy-tables","dir":"Instructor","previous_headings":"","what":"Pandas DataFrames versus Astropy Tables","title":"All in One View","text":"Two common choices Pandas DataFrame Astropy Table. Pandas DataFrames Astropy Tables share many characteristics manipulations can done either. become familiar , develop sense one prefer different tasks. instance may choose use Astropy Tables read data, especially astronomy specific data formats, Pandas DataFrames inspect data. Fortunately, Astropy makes easy convert two data types. choose use Pandas DataFrame, two reasons: provides capabilities (almost) superset data structures, --one solution. Pandas general-purpose tool useful many domains, especially data science. going develop expertise one tool, Pandas good choice. However, compared Astropy Table, Pandas one big drawback: keep metadata associated table, including units columns. Nevertheless, think useful data type familiar .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"attributes-vs-functions","dir":"Instructor","previous_headings":"","what":"Attributes vs functions","title":"All in One View","text":"shape attribute, display value without calling function. head function, need parentheses.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"All in One View","text":"make scatter plot, adjust size markers transparency figure overplotted; otherwise can misrepresent data badly. simple scatter plots Matplotlib, plot faster scatter. Astropy Table Pandas DataFrame similar many ways provide many functions. pros cons, many projects, either one reasonable choice. store data Pandas DataFrame, good option HDF5 file, can contain multiple Datasets (’ll dig Join lesson).","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"All in One View","text":"put results Pandas DataFrame, use select stars near centerline GD-1. Plotting proper motion stars, identify region proper motion stars likely GD-1. Finally, select plot stars whose proper motion region.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. Previously, ran query Gaia server, downloaded data roughly 140,000 stars, transformed coordinates GD-1 reference frame, saved results HDF5 file (Dataset name results_df). use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"import astropy.units as u import matplotlib.pyplot as plt import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' results_df = pd.read_hdf(filename, 'results_df')"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-10-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (10 minutes)","title":"All in One View","text":"Review summary statistics table. values make sense based know context? see values seem problematic, evidence data issues?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"logical-operators","dir":"Instructor","previous_headings":"","what":"Logical operators","title":"All in One View","text":"Python’s logical operators (, , ) work NumPy Pandas. libraries use bitwise operators (&, |, ~) elementwise logical operations (explanation ). Also, need parentheses around conditions; otherwise order operations incorrect.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"going need centerline_df later well. Write line code add second Dataset HDF5 file. Hint: Since file already exists, use mode='w'.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"context-managers","dir":"Instructor","previous_headings":"","what":"Context Managers","title":"All in One View","text":"use statement open file print statement (automatically) close . Read context managers.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"All in One View","text":"workflow often prototyped small set data can explored easily used identify ways limit dataset exactly data want. store data Pandas DataFrame, good option HDF5 file, can contain multiple Datasets.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"All in One View","text":"Using data previous episode, identify values proper motion stars likely GD-1. compose ADQL query selects stars based proper motion, can download data need. make possible search bigger region sky single query.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. Previously, ran query Gaia server, downloaded data roughly 140,000 stars, saved data FITS file. selected just stars proper motion GD-1 saved results HDF5 file. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf') defines previously defined quantities:","code":"import astropy.units as u from astropy.coordinates import SkyCoord from astroquery.gaia import Gaia from gala.coordinates import GD1Koposov10, GD1, reflex_correct import matplotlib.pyplot as plt import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' centerline_df = pd.read_hdf(filename, 'centerline_df') selected_df = pd.read_hdf(filename, 'selected_df') pm1_min = -8.9 pm1_max = -6.9 pm2_min = -2.2 pm2_max =  1.0  pm1_rect, pm2_rect = make_rectangle(     pm1_min, pm1_max, pm2_min, pm2_max) gd1_frame = GD1Koposov10()"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Looking proper motion stars identified along centerline GD-1, ICRS reference frame define rectangle (pmra_min, pmra_max, pmdec_min, pmdec_max) encompass proper motion majority stars near centerline GD-1 without including much contamination stars.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-10-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (10 minutes)","title":"All in One View","text":"Define candidate_coord_pm_query_base, starting candidate_coord_query_base adding two new clauses select stars whose coordinates proper motion, pmra pmdec, fall within region defined pmra_min, pmra_max, pmdec_min, pmdec_max. next exercise use format statement fill values defined .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Use format format candidate_coord_pm_query_base define candidate_coord_pm_query, filling values columns, sky_point_list, pmra_min, pmra_max, pmdec_min, pmdec_max.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"between-vs-polygon","dir":"Instructor","previous_headings":"","what":"BETWEEN vs POLYGON","title":"All in One View","text":"may wondering used proper motion previously used POLYGON coordinates. ADQL intends POLYGON function used coordinates proper motion. enforce , produce error negative value passed first argument.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"performance-warning","dir":"Instructor","previous_headings":"","what":"Performance Warning","title":"All in One View","text":"may see previous command issue similar performance warning: Series just created, mixing variables different types: sky_point_list string (text), whereas pmra_min etc. floating point numbers. combining different data types single Series somewhat inefficient, amount data small enough matter case, warning can safely ignored.","code":"[...] PerformanceWarning: your performance may suffer as PyTables will pickle object types that it cannot map directly to c-types [inferred_type->mixed-integer,key->values] [items->None]   point_series.to_hdf(filename, 'point_series')"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"All in One View","text":"possible, ‘move computation data’; , much work possible database server downloading data.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"All in One View","text":"reload candidate stars identified previous episode. run query Gaia server uploads table candidates uses JOIN operation select photometry data candidate stars. write results file use next episode.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. previous episode, define rectangle around stars GD-1 spatial coordinates proper motion transformed ICRS coordinates created point lists polygon vertices. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"from astroquery.gaia import Gaia import pandas as pd  from episode_functions import * filename = 'gd1_data.hdf' point_series = pd.read_hdf(filename, 'point_series') sky_point_list = point_series['sky_point_list'] pmra_min = point_series['pmra_min'] pmra_max = point_series['pmra_max'] pmdec_min = point_series['pmdec_min'] pmdec_max = point_series['pmdec_max'] point_series"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"a-caveat-about-matching-stars-between-catalogs","dir":"Instructor","previous_headings":"","what":"A caveat about matching stars between catalogs","title":"All in One View","text":"general, choosing star Gaia catalog finding corresponding star Pan-STARRS catalog easy. kind cross matching always possible, star might appear one catalog . even stars present, might clear one--one relationship stars two catalogs. Additional catalog matching tools available Astropy coordinates package. Fortunately, people worked problem, Gaia database includes cross-matching tables suggest best neighbor Pan-STARRS catalog many stars Gaia catalog. document describes cross matching process. Briefly, uses cone search find possible matches approximately right position, uses attributes like color magnitude choose pairs observations likely star.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"british-vs-american-spelling-of-neighbour","dir":"Instructor","previous_headings":"","what":"British vs American Spelling of Neighbour","title":"All in One View","text":"Gaia database created maintained European Space Astronomy Center. reason, table spellings use British spelling neighbour (“u”). forget include table names queries .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"sql-detail","dir":"Instructor","previous_headings":"","what":"SQL detail","title":"All in One View","text":"example, column name tables, replace clause simpler USINGclause:","code":"USING(source_id)"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-15-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (15 minutes)","title":"All in One View","text":"Now ready bring Pan-STARRS table. Starting previous query, add second JOIN clause joins gaiadr2.panstarrs1_original_valid, gives abbreviated name ps, matches original_ext_source_id best neighbor table obj_id Pan-STARRS table. Add g_mean_psf_mag i_mean_psf_mag column list, run query. result contain 490 rows 9 columns.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-15-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (15 minutes)","title":"All in One View","text":"Create new query base called candidate_join_query_base combines clauses previous query JOIN clauses best neighbor Pan-STARRS tables. Format query base using column names column_list, call result candidate_join_query. Hint: Make sure use qualified column names everywhere! Run query download results. table get 4300 rows 9 columns.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"numpy-mask-warning","dir":"Instructor","previous_headings":"","what":"Numpy Mask Warning","title":"All in One View","text":"may see warning ends following phrase: site-packages/numpy/lib/function_base.py:4650: UserWarning: Warning: 'partition' ignore 'mask' MaskedColumn. arr.partition( astroquery returning table masked columns (really fancy masked numpy arrays). turn column pandas Series, maintains mask. Describe calls numpy functions perform statistics. Numpy recently implemented warning let know mask considered calculation performing.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"number-of-neighbors","dir":"Instructor","previous_headings":"","what":"Number of neighbors","title":"All in One View","text":"table also contains number_of_neighbours number stars Pan-STARRS match terms position, using criteria choose likely match. interested final match, using criteria.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"All in One View","text":"Use JOIN operations combine data multiple tables database, using kind identifier match records one table records another. another example practice saw previous notebook, moving computation data. applications, saving data FITS HDF5 better CSV. FITS HDF5 binary formats, files usually smaller, store metadata, don’t lose anything read file back. hand, CSV ‘least common denominator’ format; , can read practically application works data.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"All in One View","text":"reload data previous episode make color-magnitude diagram. use isochrone computed MIST specify polygonal region color-magnitude diagram select stars inside .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. previous episode, selected stars GD-1 based proper motion downloaded spatial, proper motion, photometry information joining Gaia PanSTARRs datasets. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf')","code":"from os.path import getsize  import pandas as pd  from matplotlib import pyplot as plt  from episode_functions import * filename = 'gd1_data.hdf' candidate_df = pd.read_hdf(filename, 'candidate_df')"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"a-slight-detour-for-non-domain-experts","dir":"Instructor","previous_headings":"","what":"A slight detour for non-domain experts","title":"All in One View","text":"wondering (non-domain expert) interpret color-magnitude diagram, please expand section . pathologist can easily point tumor biopsy slide, can astronomers study stellar populations see two stellar main groups stars color magnitude diagram, one old star cluster (presumably, GD-1), , stars much closer, every distance Earth cluster (“foreground”). color magnitude diagram technique developed separate features just pathologists techniques contrast human tissue. color star primarily related star’s surface temperature, bluer stars indicating higher temperatures redder stars indicating lower temperatures. logic far color bottom match flame compared top. Foreground Stars: know temperature star, first need know distance account dust us star. can guess effect distance. star farther away fainter (lower y-axis value) star closer (think car headlights approach). Dust remove light star’s path telescopes, makes star seem like less energy otherwise , makes two things diagram: 1) look fainter (lower y-axis value) 2) look cooler (higher x-axis value). stars spread throughout diagram stars bright enough detected Milky Way GD-1 us made fainter redder (spread lower-right) spread distance us amount dust line sight. GD-1: pile stars lower-left quadrant diagram interesting suggests something distance amount dust way. use knowledge theoretical astrophysics (independently calculated outside work) estimate bright population old stars distance GD-1, get solid red line. exact values age metallicity ([Fe/H] value) variable needed reproduce theoretical isochrone, frankly, choice vary lot still fit data well. color-magnitude diagrams theoretical counterpart, .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"calculating-isochrone","dir":"Instructor","previous_headings":"","what":"Calculating Isochrone","title":"All in One View","text":"fact, can use MESA Isochrones & Stellar Tracks (MIST) compute us. Using MIST Version 1.2 web interface, computed isochrone following parameters: Rotation initial v/v_crit = 0.4 Single age, linear scale = 12e9 Composition [Fe/H] = -1.35 Synthetic Photometry, PanStarrs Extinction av = 0","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"encounter new object, good create toy example test think . Define list two points (represented two tuples), one inside polygon one outside polygon. Call contains_points polygon just created, passing list points defined, verify results expected.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Boolean values stored 0s 1s. FALSE = 0 TRUE = 1. Use information determine number stars fall inside polygon.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"All in One View","text":"Matplotlib provides operations working points, polygons, geometric entities, just making figures. Use Matplotlib options control size aspect ratio figures make easier interpret. Record every element data analysis pipeline needed replicate results.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"outline","dir":"Instructor","previous_headings":"","what":"Outline","title":"All in One View","text":"Starting figure previous episode, add annotations present results clearly. learn several ways customize figures make appealing effective. Finally, learn make figure multiple panels.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"starting-from-this-episode","dir":"Instructor","previous_headings":"","what":"Starting from this episode","title":"All in One View","text":"starting new notebook episode, expand section information need get started. previous episode, selected stars GD-1 based proper motion downloaded spatial, proper motion, photometry information joining Gaia PanSTARRs datasets. use data episode. Whether working new notebook coming back checkpoint, reloading data save run query . starting episode starting episode new notebook, need run following lines code. imports previously imported functions: following code loads data (instructions downloading data can found setup instructions). may need add path filename variable (e.g. filename = 'student_download/backup-data/gd1_data.hdf') defines previously defined quantities:","code":"import pandas as pd import numpy as np from matplotlib import pyplot as plt from matplotlib.patches import Polygon  from episode_functions import * filename = 'gd1_data.hdf' winner_df = pd.read_hdf(filename, 'winner_df')  centerline_df = pd.read_hdf(filename, 'centerline_df') candidate_df = pd.read_hdf(filename, 'candidate_df') loop_df = pd.read_hdf(filename, 'loop_df') pm1_min = -8.9 pm1_max = -6.9 pm2_min = -2.2 pm2_max =  1.0  pm1_rect, pm2_rect = make_rectangle(     pm1_min, pm1_max, pm2_min, pm2_max)"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-10-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (10 minutes)","title":"All in One View","text":"Think following questions: primary scientific result work? story figure telling? design figure, can identify 1 2 choices authors made think effective? Think big-picture elements, like number panels arranged, well details like choice typeface. Can identify 1 2 elements improved, might done differently?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-20-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (20 minutes)","title":"All in One View","text":"Plot selected stars winner_df using plot_cmd_selection function choose features add figure: draw vertical lines, see plt.vlines plt.axvline. add text, see plt.text. add annotation text arrow, see plt.annotate. additional information text arrows.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"note-on-accessibility","dir":"Instructor","previous_headings":"","what":"Note on Accessibility","title":"All in One View","text":"Customization offers high degree personalization creating scientific visualizations. important also create accessible visualizations broad audience may include low-vision color-blind individuals. AAS Journals provide Graphics Guide authors tips external links can help produce accessible graphics: https://journals.aas.org/graphics-guide/","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"subplot-and-axes","dir":"Instructor","previous_headings":"","what":"subplot and axes","title":"All in One View","text":"Confusingly, Matplotlib objects subplot axes often used interchangeably. subplot axes object additional methods attributes.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Read documentation tick_params use put ticks top right sides axes.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes-1","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Plot previous figure , see font sizes changed. Look element rcParams, change value, check effect figure.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"return-to-default","dir":"Instructor","previous_headings":"","what":"Return to Default","title":"All in One View","text":"switch back default style use","code":"plt.style.use('default')"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes-2","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Choose one styles list select calling use. go back plot one previous figures see changes figure’s appearance.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes-3","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"happens leave tight_layout?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes-4","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"example, ratio widths panels 3:1. adjust wanted ratio 3:2?","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes-5","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Add lines run plot_cmd function show polygon selected shaded area. Hint: pass loop_df argument Polygon episode 7 plot using add_patch.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":"exercise-5-minutes-6","dir":"Instructor","previous_headings":"","what":"Exercise (5 minutes)","title":"All in One View","text":"Add Polygon patches just created right panels four panel figure.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/aio.html","id":null,"dir":"Instructor","previous_headings":"","what":"Keypoints","title":"All in One View","text":"Effective figures focus telling single story clearly authentically. major decisions needed creating effective summary figure like one can done away computer built low fidelity (hand drawn) high (tweaking rcParams, etc.). Consider using annotations guide reader’s attention important elements figure, keeping mind accessiblity issues detail may introduce. default Matplotlib style generates good quality figures, several ways can override defaults. find making customizations several projects, might want create style sheet.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/calculating_MIST_isochrone.html","id":"calculating-isochrone","dir":"Instructor","previous_headings":"","what":"Calculating Isochrone","title":"Making the Isochrone DataFrame","text":"fact, can use MESA Isochrones & Stellar Tracks (MIST) compute us. Using MIST Version 1.2 web interface, computed isochrone following parameters: Rotation initial v/v_crit = 0.4 Single age, linear scale = 12e9 Composition [Fe/H] = -1.35 Synthetic Photometry, PanStarrs Extinction av = 0","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/index.html","id":"prerequisites","dir":"Instructor","previous_headings":"","what":"Prerequisites","title":"Summary and Schedule","text":"lesson assumes working knowledge Python previous exposure Bash shell. requirements can fulfilled : ) completing Software Carpentry Python workshop b) completing Data Carpentry Ecology workshop (Python) Data Carpentry Genomics workshop c) independent exposure Python Bash shell. ’re unsure whether enough experience participate workshop, please read detailed list, gives functions, operators, concepts need familiar . addition, lesson assumes learners familiarity astronomical concepts, including reference frames, proper motion, color-magnitude diagrams, globular clusters, isochrones. Participants bring laptops plan participate actively.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/index.html","id":"anaconda","dir":"Instructor","previous_headings":"","what":"Anaconda","title":"Summary and Schedule","text":"Download install Anaconda. create new Conda environment, includes additional packages using workshop, need environment file (environment.yml) downloaded data section. Terminal Jupyter Prompt, make sure student_download directory, environment.yml stored, run: , activate environment just created, run:","code":"conda env create -f environment.yml conda activate AstronomicalData"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/index.html","id":"jupyter","dir":"Instructor","previous_headings":"","what":"Jupyter","title":"Summary and Schedule","text":"test environment setup using test notebook (test_setup.ipynb) downloaded data section. Terminal, Jupyter Prompt Anaconda Prompt, make sure student_download directory. start Jupyter, make sure activated new conda environment, run: notebook open automatically browser. wish use different browser, open link: http://localhost:8888. Now open notebook downloaded, test_setup.ipynb, read instructions . Make sure run cells contain import statements. work get error messages, ready workshop. Please contact instructors experience problems installation instructions. working materials independently, let us know problems encounter filing issue lesson’s GitHub repository emailing team@carpentries.org.","code":"jupyter notebook"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/index.html","id":"why-didnt-the-imports-work","dir":"Instructor","previous_headings":"","what":"Why didn’t the imports work?","title":"Summary and Schedule","text":"Occasionally learners need take one additional step make Jupyter run within environment created. imports fail, close Jupyter closing terminal, try running following Anaconda prompt ( Terminal otherwise): start Jupyter : time, open notebook, navigate Kernel menu –> Change Kernel –> select AstronomicalData . ensure relevant packages available. can seek installation help looks confusing!","code":"python -m ipykernel install --user --name=AstronomicalData jupyter notebook"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"overview","dir":"Instructor","previous_headings":"","what":"Overview","title":"Instructor Notes","text":"lesson guides learners analyzing data large database. Scientifically, identifying stars GD-1, stellar stream Milky Way (creating Figure 1 “beaten path: Gaia reveals GD-1 stars outside main stream” Adrian Price-Whelan Ana Bonaca). first part lesson (episodes 1-6) shows learners prototype query, starting querying subset sky ultimately want building stronger stronger filters locally. filters place, episode 7 performs full query remote remote database, giving us dataset visualize episode 8. Episode 8 demonstrates best practices tips tricks efficiently effectively visualize data. episode follows single dataset throughout, easy learners (instructors) lose sight bigger picture focus instead scientific goals individual commands. beginning episode recommended instructor discuss scientific goal episode (frequent references Figure 1) highlight big picture skills hope student takes away episode, beyond specific science case. end episode instructors recap information, highlighting best practices covered. onboarding video accompanying slides available prepare Instructors teach lesson. watching video, please contact team@carpentries.org can record status onboarded Instructor. Instructors completed onboarding given priority status teaching Centrally-Organised Data Carpentry Foundations Astronomical Data Science workshops.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"timing","dir":"Instructor","previous_headings":"","what":"Timing","title":"Instructor Notes","text":"Unfortunately episodes incredibly cumulative much can cut along way. running short time, recommend eliminating condensing sections: cutting stream-lining parts episode 8 plotting. significant way can make time. stream-line CSV section end episode 6, instance skip read back section demonstrates extra columns can slip CSV files cut “Checking Match” section episode 6 cut part check size HDF5 file episode 4 cut brief discussion context managers episode 4","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"decisions-made","dir":"Instructor","previous_headings":"","what":"Decisions Made","title":"Instructor Notes","text":"explicitly recommend using Jupyter notebooks rather Jupyter lab found reliable across different platforms require less front explanation. explained episodes, think valuable learners know little bit Astropy Tables Pandas DataFrames strengths weaknesses astronomy software standard industry standard. lot typing curriculum. best keep Carpentries live coding practices - recommend copy paste previous cells needed provide pre-filled notebooks. Provide learners links line lessons reassure can jump back beginning episode overwhelmed need break.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"introduction","dir":"Instructor","previous_headings":"","what":"Introduction","title":"Instructor Notes","text":"Astronomical datasets getting larger larger. result, astronomical analysis shifting away working raw imaging towards analyzing already reduced data (simulations) stored large databases. know ask databases right questions, incredibly powerful tool. ability interact large databases fundamental future astronomy well skill highly valued outside astronomical community. Motivate skills taught curriculum science whether transients, exoplanets, weak lensing (something else). Introduce tools teaching think important astronomers know: SQL: general purpose language interact databases - used widely astronomy industry Python: general purpose programming language - used widely astronomy industry Astropy: package common astronomical functions objects facilitate analysis astronomical data Astroquery: python interface SQL-flavored astronomical databases (might good place show catalogs astroquery supports) Pandas: python package deal arrays databases - used widely astronomy industry Matplotlib: python visualization package - used widely astronomy industry Note balance astronomy specific tools allow us efficiently interact specific data broadly used tools can prepare learners career outside academia. Introduce skills (best practices surrounding skills) teaching: Developing testing SQL Python Working remote databases Storing data locally Validating data analysis pipelines Visualizing results Introduce dataset: GD-1 stream stars Milky Way believed globular cluster stretched gravitational potential Milky Way Identify stars GD-1 using Gaia Pan-STARRs data stored ESA Gaia database Give one sentence description Gaia Pan-STARRs surveys Reproduce Figure 1 Price-Whelan & Bonaca, 2018 Uses data two broadly used surveys accessible astroquery (can used access large number astronomical surveys) Two large catalogs make big done locally Compelling science case: analysis extends known structure GD-1, discovers new substructure, identifies candidate progenitor Compelling use case: time data release publication arXiv less week. models efficiently workflow can also one set tools data release quickly turn around paper Show Figure 1 Price-Whelan & Bonaca describe workflow going go First going select stars purely based location sky near know GD-1 exists. figure full query robust filter, going limit small spatial subset stars downloading manageable dataset. also rough filter color (avoid nearby faint foreground stars likely red) parallax (avoid foreground stars) good time introduce GD-1 reference frame (coordinates phi1 phi2) phi1 parallel stream direction phi2 perpendicular stream direction. easiest frame visualize stream often set query constraints. first filter apply filter proper motion. GD-1 stretched globular cluster, stars moving along stream (parallel x-axis). plot proper motion stars spatial region selected, see clump stars motion phi2 non-zero motion phi1. stars GD-1. first filter apply select stars proper motion falls region proper motion space (top right plot). stars selected shown top left plot. first identify range proper motion interested locally, develop query can performed Gaia catalog allows us see GD-1, still lot contamination non-GD-1 sources. refine filter, going use fact believe GD-1 globular cluster therefore stars formed time. means can build g-color magnitude diagram (CMD) select stars fall single isochrone corresponding age GD-1. build color magnitude diagram need g magnitudes Pan-STARRS catalog. CMD stars selected based proper motion shows bottom right panel Price-Whelan & Bonaca, 1998 Figure 1, along best-fit isochrone. select stars around main sequence isochrone. results selection can seen bottom left panel Figure 1. can see GD-1 stands much prominently. prototyped query small subset spatial extent GD-1, re-run query almost full extent recreate Figure 1. episode start overview - often good show Figure 1 talk just going . sure highlight learning objectives discuss tools skills applicable beyond dataset science case. End episode summary just going best-practices. Take opportunity connect skills used specific science case broader skill set can applied science case. Share links episode learners. lot typing student gets stuck debugging typo, episode can allow catch . Encourage type along use episode back . recommended minimum day new notebook avoid single notebook large become slow interact . great demonstrate best practice breaking complex analysis multiple notebooks starting new episode new notebook, add overhead teaching time launch new notebook get set previously defined variables, use best judgement based level audience. decide start episode new notebook can use “Starting Episode” call beginning episode import define everything need previous episodes. using files student_download directory sure add correct path student_download/backup-data/<filename>. recommended repeat variable names modify queries place. student misses step easy way determine code . Although learners seen functions SWC python episode, always good reiterate process prototyping want . find wanting , make function (good rule thumb copy pasting, think whether using function). Highlight throughout episode commands ADQL specific (CONTAINS, POINTS, POLYGON) general SQL commands (everything else). Errors happen throughout workshop. online setting can especially useful learners share screen class troubleshoot together. gives learners opportunity see troubleshoot see common errors. However, aware time derail entire episode someone edge case issue. Think communicate exercises learners, especially online setting. first beta workshop instructors learners really happy hackmd.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"episode-1-queries","dir":"Instructor","previous_headings":"","what":"Episode 1: Queries","title":"Instructor Notes","text":"beginning episode, possible points confusion (1) two functions similar named, load_tables load_table, neither actually downloads table; rather, download metadata tables. Note even though use parallax column analysis, include results use data exploration section query2 (subsequent queries) learner get exactly 2000 results, probably used launch_job rather launch_job_async. good opportunity remind learners: get exactly 2000 results, check async query synchronous query One challenges debugging queries astroquery provides basically debugging information generic error message. important emphasize careful checking queries incremental development: starting known-good query making small changes. Throughout episodes check type output. good best practice make sure getting think getting. can remind learners comes .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"episode-2-coordinates-and-units","dir":"Instructor","previous_headings":"","what":"Episode 2: Coordinates and units","title":"Instructor Notes","text":"Highlight CONTAINS statements interact - CONTAINS returns 1 something contained within defined shape checking CONTAINS equals 1. statement 1=CONTAINS true something located region. Learners struggle reference frames transforming . Repeat many times possible. Gaia catalog universal frame (ICRS) easier visualize create filters specific GD-1 axes reference frame aligned GD-1 stream direction. switching ICRS frame GD-1 frame often. GD-1 frame build filter ICRS frame actually query database, back GD-1 frame visualize results. Emphasize basic structure SkyCoord object: location along axis 1, location along axis 2, frame. example ICRS frame, axis 1 ra axis 2 dec. GD-1 frame, axis 1 phi1 axis 2 phi2. Mention can transform different coordinate systems easily using unified framework: astropy. allows learners build custom frame object access astropy tools deal coordinate transformations. define phi1_min, phi1_max, etc go back Figure 1 show learners region defining, connecting min max values coordinates GD-1 frame. another place can mention benefit using GD-1 frame can define rectangle around stream.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"episode-3-tabular-data-and-transformations","dir":"Instructor","previous_headings":"","what":"Episode 3: Tabular Data and Transformations","title":"Instructor Notes","text":"Transforming back: discussion motivation transform back GD-1 frame great time student build intuition proper motion selection relates physical picture. Remind GD-1 globular cluster pulled stream along phi1 direction. means GD-1 stars non-zero motion along phi1 direction motion close 0 phi2 direction. let learners get hung setting distance radial velocity constants. distance, parallax close 0 unreliable mentioned, radial velocity avoid errors. plot end reflex correction good example intermediate step determining best filter GD-1 stars. can imagine data exploration trying first purely spatial plot, realizing many non-GD-1 stars included need another way filter foreground stars. Proper motion! episode going define functions use episodes. process prototyping inline writing function common. Especially make_dataframe good opportunity show different steps performed last episode can elegantly strung together. defining functions now takes little longer, good code still fresh learn’s minds really useful later.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"episode-4-proper-motion","dir":"Instructor","previous_headings":"","what":"Episode 4: Proper motion","title":"Instructor Notes","text":"likely final episode day 1 two day workshop. episode takes slight detour introduce features Pandas DataFrames. keep connected story, can talk data exploration important part prototyping query making sure getting results expect format expect . Starting selecting centerline, series filters different data frames. Take minute teach section make sure understand one represents. use results_df build centerline_df. use centerline_df determine proper motion limits. use proper motion limits determined centerline_df select GD-1 stars results_df. selected_df. Learners may ask select close center line beginning. also worth noting selecting stars close center line identify proper motion cut, ok exclude GD-1 stars . case prefer pure sample complete sample. proper motion limits pure sample (centerline_df), include full spatial region (results_df) get GD-1 stars (selected_df). episode uses following idiom several times idiom violates recommendation repeat variables names, since defined used immediately, ok. syntax simplifies final plot expression making easier read. Learners may concerned writing function later fill full canvas (set axis('equal') proper motion selected stars figure). can reassure episode 7 take care learning set figure size, subplot size, using larger spatial area (define episode 4). Notice previous episode used DataFrame.to_hdf included mode=\"w\" argument indicate want create new, empty HDF Store. (subsequent) episode(s), use mode=\"w\" argument, add new Datasets existing Store, rather starting . end Day 1, student lost struggled end episode, point local copy HDF5 files can read everyone else Day 2. downloaded file part set student_download/data directory/. learner notices / front keys end episode mean: / indicates keys top level Dataset hierarchy, named “group”. future episodes add Datasets file, many need organize groups.","code":"x = ... y = ... plt.plot(x, y)"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"episode-5-coordinate-transformation-and-selection","dir":"Instructor","previous_headings":"","what":"Episode 5: Coordinate transformation and selection","title":"Instructor Notes","text":"likely first episode Day 2. start learners start new notebook. need read data saved yesterday HDF5 files functions wrote yesterday. can follow directions collapsable section beginning episode called “Starting episode”. using files student_download directory sure add correct path student_download/backup-data/<filename>. episode faster looks learners seen much content already previous episodes, challenge learners keeping track . Surface periodically remind . big focus episode now determined filter based proper motion eliminated contaminating stars prototype, can repeat query, time full spatial extent GD-1 rather small portion used prototype. use ConvexHull episode bit hack, learners find computation geometry functions SciPy useful. Make sure review query candidate_coord_query_base Episode 2 (happen naturally retype ) remind learners filter using Notice definitions phi1_min, phi1_max, etc. different episode. adding filters, can select bigger region without exceeding resource limits. learners get many “candidates” expected, might using old values bounds. Defining new region good opportunity go back figure connect coordinates physical picture GD-1 (e.g. selecting region now expanding whole region) Learners may ask using dict(key1=value1, key2=value2) rather {key1:value1, key2:value2}. using dict syntax key value pairs look like keyword arguments. may simplify understanding learners less familiar dictionaries. , episode use mode=\"w\" argument, add new Datasets existing Store, rather starting . writing point_series object HDF5 file, learners may see warning message like following: ```/Users/bostroem/opt/anaconda3/envs/AstronomicalData/lib/python3.8/site-packages/pandas/core/generic.py:2434: PerformanceWarning: performance may suffer PyTables pickle object types map directly c-types [inferred_type->mixed,key->values] [items->None] pytables.to_hdf( ``` warning saying pickle slow large objects. need worry since objects saving small. learners struggle query exercise - remind defining polygon way (syntax) looking proper motion instead space. Learners get number candidates. get different number likely mistyped something.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"episode-6-joining-tables","dir":"Instructor","previous_headings":"","what":"Episode 6: Joining tables","title":"Instructor Notes","text":"early part episode brings back lot best practices learners learned previous episodes (e.g. exploring tables, returning top 5 rows) great opportunity highlight remind learners seen . Although immediately use column definitions panstarrs1_best_neighbour, come back data exploration part episode. Throughout episode continue come back central theme starting simple query building layers complexity, testing layer go. Pan-STARRS join exercise likely feel scary lot learners - seen one example. Emphasize building blocks JOIN e.g. table1 JOIN table2 table1.common_column=table2.common_column. also worth pointing common_column names case. CSV files basic file format, running short time, section can skipped abbreviated learners often likely encountered CSV files writing essential rest curriculum. case learner asks extra unnamed column CSV section explanation. may notice Pandas DataFrames index column part original table definition. essentially numbers row. write DataFrame format, index gets treated like bonafide column. reason write CSV file read back DataFrame index column gets written unnamed column read back , another index column created leading two extraneous columns.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"episode-7-photometry","dir":"Instructor","previous_headings":"","what":"Episode 7: Photometry","title":"Instructor Notes","text":"easy episode lose track main point: want define polygon around main sequence GD-1 can hone sample candidate GD-1 stars. spend time isochrone, creating polygon, etc make sure come back big picture often. key take away CMD presentation GD-1 globular cluster means stars formed time. Therefore expect stars GD-1 follow single, tight isochrone, main sequence can easily identify. manipulate MIST isochrone get available download read . much detail curriculum, process detailed Making Isochrone Dataframe learner interested. original paper, use idiosyncratic function define boundaries isochrone filter. intention define polygon gets wider g increases, reflect increasing uncertainty. exercise using simplified version constant offset isochrone. Turning selection defined polygon (making loop) can challenging explain verbally fairly simple visually. nice time return slides draw picture manipulation create polygon, can get lost left_color, right_color, color_loop x values polygon (g mag_loop y values). worth coming back introduce variable. Learners might express concern polygon use select candidate stars closed. ok; contains_points method treats polygon closed (connecting last point first). Learners may notice contains_points actually Polygon property. Polygon inherits method Patch. mention usetex discussion TeX markup matplotlib. option work operating system/backend combinations (first alpha pilot notebooks required restarting trying use option). , one error can fixed LaTeX Error: File 'type1cm.sty' found. Learners error might install package contains fonts LaTeX needs. systems, packages texlive-latex-extra cm-super might need. See help . Learners may ask initializing empty array creating columns fly. DataFrame initializes arrays rows rather columns, easiest way without array manipulation. See https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html details.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/instructor-notes.html","id":"episode-8-visualization","dir":"Instructor","previous_headings":"","what":"Episode 8: Visualization","title":"Instructor Notes","text":"episode largely showing learners selected capabilities make lives easier. Matplotlib huge package infinite flexibility - way complete hopefully gives barebones tools work inspired explore . addition links provided episode nice show learners list plotting commands examples gallery. episode also great place show useful functions wrote previous episodes . running short time, discussion customization can shortened eliminated exercises adding annotation done together class.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/prereqs.html","id":"bash-shell-skills","dir":"Instructor","previous_headings":"","what":"Bash shell skills","title":"Prerequisites","text":"skill set listed covered Software Carpentry workshop, well Data Carpentry’s Genomics workshop. skills can also learned coursework independent learning. able : Identify navigate home directory. Identify current working directory. Navigating directories using pwd, ls, cd <subdirectory>, cd ..","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor/prereqs.html","id":"python-skills","dir":"Instructor","previous_headings":"","what":"Python skills","title":"Prerequisites","text":"skill set listed covered Software Carpentry’s Python workshop Data Carpentry’s Ecology workshop Python. skills can also learned coursework independent learning. able : Perform basic arithmetic operations (e.g. addition, subtraction) variables. Convert strings ints floats appropriate. Create list alter lists appending, inserting, removing values. Use indexing slicing access elements strings, lists, Numpy arrays. Use good coding practices comment code choose appropriate variable names. Write loop increments variable. Write conditional statements using , elif, else. Use comparison operators (==, !=, <, <=, >, >=) conditional statements. Open, read , write , close input output files. Use print() len() inspect variables. following skills useful, required: Apply function entire Numpy array single array axis. Write user-defined function. signed , considering signing workshop, aren’t sure whether meet reqirements, please get touch workshop instructors host.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Instructor Notes","text":"lesson guides learners analyzing data large database. Scientifically, identifying stars GD-1, stellar stream Milky Way (creating Figure 1 “beaten path: Gaia reveals GD-1 stars outside main stream” Adrian Price-Whelan Ana Bonaca). first part lesson (episodes 1-6) shows learners prototype query, starting querying subset sky ultimately want building stronger stronger filters locally. filters place, episode 7 performs full query remote remote database, giving us dataset visualize episode 8. Episode 8 demonstrates best practices tips tricks efficiently effectively visualize data. episode follows single dataset throughout, easy learners (instructors) lose sight bigger picture focus instead scientific goals individual commands. beginning episode recommended instructor discuss scientific goal episode (frequent references Figure 1) highlight big picture skills hope student takes away episode, beyond specific science case. end episode instructors recap information, highlighting best practices covered. onboarding video accompanying slides available prepare Instructors teach lesson. watching video, please contact team@carpentries.org can record status onboarded Instructor. Instructors completed onboarding given priority status teaching Centrally-Organised Data Carpentry Foundations Astronomical Data Science workshops.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"timing","dir":"","previous_headings":"","what":"Timing","title":"Instructor Notes","text":"Unfortunately episodes incredibly cumulative much can cut along way. running short time, recommend eliminating condensing sections: cutting stream-lining parts episode 8 plotting. significant way can make time. stream-line CSV section end episode 6, instance skip read back section demonstrates extra columns can slip CSV files cut “Checking Match” section episode 6 cut part check size HDF5 file episode 4 cut brief discussion context managers episode 4","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"decisions-made","dir":"","previous_headings":"","what":"Decisions Made","title":"Instructor Notes","text":"explicitly recommend using Jupyter notebooks rather Jupyter lab found reliable across different platforms require less front explanation. explained episodes, think valuable learners know little bit Astropy Tables Pandas DataFrames strengths weaknesses astronomy software standard industry standard. lot typing curriculum. best keep Carpentries live coding practices - recommend copy paste previous cells needed provide pre-filled notebooks. Provide learners links line lessons reassure can jump back beginning episode overwhelmed need break.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Instructor Notes","text":"Astronomical datasets getting larger larger. result, astronomical analysis shifting away working raw imaging towards analyzing already reduced data (simulations) stored large databases. know ask databases right questions, incredibly powerful tool. ability interact large databases fundamental future astronomy well skill highly valued outside astronomical community. Motivate skills taught curriculum science whether transients, exoplanets, weak lensing (something else). Introduce tools teaching think important astronomers know: SQL: general purpose language interact databases - used widely astronomy industry Python: general purpose programming language - used widely astronomy industry Astropy: package common astronomical functions objects facilitate analysis astronomical data Astroquery: python interface SQL-flavored astronomical databases (might good place show catalogs astroquery supports) Pandas: python package deal arrays databases - used widely astronomy industry Matplotlib: python visualization package - used widely astronomy industry Note balance astronomy specific tools allow us efficiently interact specific data broadly used tools can prepare learners career outside academia. Introduce skills (best practices surrounding skills) teaching: Developing testing SQL Python Working remote databases Storing data locally Validating data analysis pipelines Visualizing results Introduce dataset: GD-1 stream stars Milky Way believed globular cluster stretched gravitational potential Milky Way Identify stars GD-1 using Gaia Pan-STARRs data stored ESA Gaia database Give one sentence description Gaia Pan-STARRs surveys Reproduce Figure 1 Price-Whelan & Bonaca, 2018 Uses data two broadly used surveys accessible astroquery (can used access large number astronomical surveys) Two large catalogs make big done locally Compelling science case: analysis extends known structure GD-1, discovers new substructure, identifies candidate progenitor Compelling use case: time data release publication arXiv less week. models efficiently workflow can also one set tools data release quickly turn around paper Show Figure 1 Price-Whelan & Bonaca describe workflow going go First going select stars purely based location sky near know GD-1 exists. figure full query robust filter, going limit small spatial subset stars downloading manageable dataset. also rough filter color (avoid nearby faint foreground stars likely red) parallax (avoid foreground stars) good time introduce GD-1 reference frame (coordinates phi1 phi2) phi1 parallel stream direction phi2 perpendicular stream direction. easiest frame visualize stream often set query constraints. first filter apply filter proper motion. GD-1 stretched globular cluster, stars moving along stream (parallel x-axis). plot proper motion stars spatial region selected, see clump stars motion phi2 non-zero motion phi1. stars GD-1. first filter apply select stars proper motion falls region proper motion space (top right plot). stars selected shown top left plot. first identify range proper motion interested locally, develop query can performed Gaia catalog allows us see GD-1, still lot contamination non-GD-1 sources. refine filter, going use fact believe GD-1 globular cluster therefore stars formed time. means can build g-color magnitude diagram (CMD) select stars fall single isochrone corresponding age GD-1. build color magnitude diagram need g magnitudes Pan-STARRS catalog. CMD stars selected based proper motion shows bottom right panel Price-Whelan & Bonaca, 1998 Figure 1, along best-fit isochrone. select stars around main sequence isochrone. results selection can seen bottom left panel Figure 1. can see GD-1 stands much prominently. prototyped query small subset spatial extent GD-1, re-run query almost full extent recreate Figure 1. episode start overview - often good show Figure 1 talk just going . sure highlight learning objectives discuss tools skills applicable beyond dataset science case. End episode summary just going best-practices. Take opportunity connect skills used specific science case broader skill set can applied science case. Share links episode learners. lot typing student gets stuck debugging typo, episode can allow catch . Encourage type along use episode back . recommended minimum day new notebook avoid single notebook large become slow interact . great demonstrate best practice breaking complex analysis multiple notebooks starting new episode new notebook, add overhead teaching time launch new notebook get set previously defined variables, use best judgement based level audience. decide start episode new notebook can use “Starting Episode” call beginning episode import define everything need previous episodes. using files student_download directory sure add correct path student_download/backup-data/<filename>. recommended repeat variable names modify queries place. student misses step easy way determine code . Although learners seen functions SWC python episode, always good reiterate process prototyping want . find wanting , make function (good rule thumb copy pasting, think whether using function). Highlight throughout episode commands ADQL specific (CONTAINS, POINTS, POLYGON) general SQL commands (everything else). Errors happen throughout workshop. online setting can especially useful learners share screen class troubleshoot together. gives learners opportunity see troubleshoot see common errors. However, aware time derail entire episode someone edge case issue. Think communicate exercises learners, especially online setting. first beta workshop instructors learners really happy hackmd.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"episode-1-queries","dir":"","previous_headings":"","what":"Episode 1: Queries","title":"Instructor Notes","text":"beginning episode, possible points confusion (1) two functions similar named, load_tables load_table, neither actually downloads table; rather, download metadata tables. Note even though use parallax column analysis, include results use data exploration section query2 (subsequent queries) learner get exactly 2000 results, probably used launch_job rather launch_job_async. good opportunity remind learners: get exactly 2000 results, check async query synchronous query One challenges debugging queries astroquery provides basically debugging information generic error message. important emphasize careful checking queries incremental development: starting known-good query making small changes. Throughout episodes check type output. good best practice make sure getting think getting. can remind learners comes .","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"episode-2-coordinates-and-units","dir":"","previous_headings":"","what":"Episode 2: Coordinates and units","title":"Instructor Notes","text":"Highlight CONTAINS statements interact - CONTAINS returns 1 something contained within defined shape checking CONTAINS equals 1. statement 1=CONTAINS true something located region. Learners struggle reference frames transforming . Repeat many times possible. Gaia catalog universal frame (ICRS) easier visualize create filters specific GD-1 axes reference frame aligned GD-1 stream direction. switching ICRS frame GD-1 frame often. GD-1 frame build filter ICRS frame actually query database, back GD-1 frame visualize results. Emphasize basic structure SkyCoord object: location along axis 1, location along axis 2, frame. example ICRS frame, axis 1 ra axis 2 dec. GD-1 frame, axis 1 phi1 axis 2 phi2. Mention can transform different coordinate systems easily using unified framework: astropy. allows learners build custom frame object access astropy tools deal coordinate transformations. define phi1_min, phi1_max, etc go back Figure 1 show learners region defining, connecting min max values coordinates GD-1 frame. another place can mention benefit using GD-1 frame can define rectangle around stream.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"episode-3-tabular-data-and-transformations","dir":"","previous_headings":"","what":"Episode 3: Tabular Data and Transformations","title":"Instructor Notes","text":"Transforming back: discussion motivation transform back GD-1 frame great time student build intuition proper motion selection relates physical picture. Remind GD-1 globular cluster pulled stream along phi1 direction. means GD-1 stars non-zero motion along phi1 direction motion close 0 phi2 direction. let learners get hung setting distance radial velocity constants. distance, parallax close 0 unreliable mentioned, radial velocity avoid errors. plot end reflex correction good example intermediate step determining best filter GD-1 stars. can imagine data exploration trying first purely spatial plot, realizing many non-GD-1 stars included need another way filter foreground stars. Proper motion! episode going define functions use episodes. process prototyping inline writing function common. Especially make_dataframe good opportunity show different steps performed last episode can elegantly strung together. defining functions now takes little longer, good code still fresh learn’s minds really useful later.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"episode-4-proper-motion","dir":"","previous_headings":"","what":"Episode 4: Proper motion","title":"Instructor Notes","text":"likely final episode day 1 two day workshop. episode takes slight detour introduce features Pandas DataFrames. keep connected story, can talk data exploration important part prototyping query making sure getting results expect format expect . Starting selecting centerline, series filters different data frames. Take minute teach section make sure understand one represents. use results_df build centerline_df. use centerline_df determine proper motion limits. use proper motion limits determined centerline_df select GD-1 stars results_df. selected_df. Learners may ask select close center line beginning. also worth noting selecting stars close center line identify proper motion cut, ok exclude GD-1 stars . case prefer pure sample complete sample. proper motion limits pure sample (centerline_df), include full spatial region (results_df) get GD-1 stars (selected_df). episode uses following idiom several times idiom violates recommendation repeat variables names, since defined used immediately, ok. syntax simplifies final plot expression making easier read. Learners may concerned writing function later fill full canvas (set axis('equal') proper motion selected stars figure). can reassure episode 7 take care learning set figure size, subplot size, using larger spatial area (define episode 4). Notice previous episode used DataFrame.to_hdf included mode=\"w\" argument indicate want create new, empty HDF Store. (subsequent) episode(s), use mode=\"w\" argument, add new Datasets existing Store, rather starting . end Day 1, student lost struggled end episode, point local copy HDF5 files can read everyone else Day 2. downloaded file part set student_download/data directory/. learner notices / front keys end episode mean: / indicates keys top level Dataset hierarchy, named “group”. future episodes add Datasets file, many need organize groups.","code":"x = ... y = ... plt.plot(x, y)"},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"episode-5-coordinate-transformation-and-selection","dir":"","previous_headings":"","what":"Episode 5: Coordinate transformation and selection","title":"Instructor Notes","text":"likely first episode Day 2. start learners start new notebook. need read data saved yesterday HDF5 files functions wrote yesterday. can follow directions collapsable section beginning episode called “Starting episode”. using files student_download directory sure add correct path student_download/backup-data/<filename>. episode faster looks learners seen much content already previous episodes, challenge learners keeping track . Surface periodically remind . big focus episode now determined filter based proper motion eliminated contaminating stars prototype, can repeat query, time full spatial extent GD-1 rather small portion used prototype. use ConvexHull episode bit hack, learners find computation geometry functions SciPy useful. Make sure review query candidate_coord_query_base Episode 2 (happen naturally retype ) remind learners filter using Notice definitions phi1_min, phi1_max, etc. different episode. adding filters, can select bigger region without exceeding resource limits. learners get many “candidates” expected, might using old values bounds. Defining new region good opportunity go back figure connect coordinates physical picture GD-1 (e.g. selecting region now expanding whole region) Learners may ask using dict(key1=value1, key2=value2) rather {key1:value1, key2:value2}. using dict syntax key value pairs look like keyword arguments. may simplify understanding learners less familiar dictionaries. , episode use mode=\"w\" argument, add new Datasets existing Store, rather starting . writing point_series object HDF5 file, learners may see warning message like following: ```/Users/bostroem/opt/anaconda3/envs/AstronomicalData/lib/python3.8/site-packages/pandas/core/generic.py:2434: PerformanceWarning: performance may suffer PyTables pickle object types map directly c-types [inferred_type->mixed,key->values] [items->None] pytables.to_hdf( ``` warning saying pickle slow large objects. need worry since objects saving small. learners struggle query exercise - remind defining polygon way (syntax) looking proper motion instead space. Learners get number candidates. get different number likely mistyped something.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"episode-6-joining-tables","dir":"","previous_headings":"","what":"Episode 6: Joining tables","title":"Instructor Notes","text":"early part episode brings back lot best practices learners learned previous episodes (e.g. exploring tables, returning top 5 rows) great opportunity highlight remind learners seen . Although immediately use column definitions panstarrs1_best_neighbour, come back data exploration part episode. Throughout episode continue come back central theme starting simple query building layers complexity, testing layer go. Pan-STARRS join exercise likely feel scary lot learners - seen one example. Emphasize building blocks JOIN e.g. table1 JOIN table2 table1.common_column=table2.common_column. also worth pointing common_column names case. CSV files basic file format, running short time, section can skipped abbreviated learners often likely encountered CSV files writing essential rest curriculum. case learner asks extra unnamed column CSV section explanation. may notice Pandas DataFrames index column part original table definition. essentially numbers row. write DataFrame format, index gets treated like bonafide column. reason write CSV file read back DataFrame index column gets written unnamed column read back , another index column created leading two extraneous columns.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"episode-7-photometry","dir":"","previous_headings":"","what":"Episode 7: Photometry","title":"Instructor Notes","text":"easy episode lose track main point: want define polygon around main sequence GD-1 can hone sample candidate GD-1 stars. spend time isochrone, creating polygon, etc make sure come back big picture often. key take away CMD presentation GD-1 globular cluster means stars formed time. Therefore expect stars GD-1 follow single, tight isochrone, main sequence can easily identify. manipulate MIST isochrone get available download read . much detail curriculum, process detailed Making Isochrone Dataframe learner interested. original paper, use idiosyncratic function define boundaries isochrone filter. intention define polygon gets wider g increases, reflect increasing uncertainty. exercise using simplified version constant offset isochrone. Turning selection defined polygon (making loop) can challenging explain verbally fairly simple visually. nice time return slides draw picture manipulation create polygon, can get lost left_color, right_color, color_loop x values polygon (g mag_loop y values). worth coming back introduce variable. Learners might express concern polygon use select candidate stars closed. ok; contains_points method treats polygon closed (connecting last point first). Learners may notice contains_points actually Polygon property. Polygon inherits method Patch. mention usetex discussion TeX markup matplotlib. option work operating system/backend combinations (first alpha pilot notebooks required restarting trying use option). , one error can fixed LaTeX Error: File 'type1cm.sty' found. Learners error might install package contains fonts LaTeX needs. systems, packages texlive-latex-extra cm-super might need. See help . Learners may ask initializing empty array creating columns fly. DataFrame initializes arrays rows rather columns, easiest way without array manipulation. See https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html details.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/instructor-notes.html","id":"episode-8-visualization","dir":"","previous_headings":"","what":"Episode 8: Visualization","title":"Instructor Notes","text":"episode largely showing learners selected capabilities make lives easier. Matplotlib huge package infinite flexibility - way complete hopefully gives barebones tools work inspired explore . addition links provided episode nice show learners list plotting commands examples gallery. episode also great place show useful functions wrote previous episodes . running short time, discussion customization can shortened eliminated exercises adding annotation done together class.","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/prereqs.html","id":"bash-shell-skills","dir":"","previous_headings":"","what":"Bash shell skills","title":"Prerequisites","text":"skill set listed covered Software Carpentry workshop, well Data Carpentry’s Genomics workshop. skills can also learned coursework independent learning. able : Identify navigate home directory. Identify current working directory. Navigating directories using pwd, ls, cd <subdirectory>, cd ..","code":""},{"path":"https://ErinBecker.github.io/astronomy-python/prereqs.html","id":"python-skills","dir":"","previous_headings":"","what":"Python skills","title":"Prerequisites","text":"skill set listed covered Software Carpentry’s Python workshop Data Carpentry’s Ecology workshop Python. skills can also learned coursework independent learning. able : Perform basic arithmetic operations (e.g. addition, subtraction) variables. Convert strings ints floats appropriate. Create list alter lists appending, inserting, removing values. Use indexing slicing access elements strings, lists, Numpy arrays. Use good coding practices comment code choose appropriate variable names. Write loop increments variable. Write conditional statements using , elif, else. Use comparison operators (==, !=, <, <=, >, >=) conditional statements. Open, read , write , close input output files. Use print() len() inspect variables. following skills useful, required: Apply function entire Numpy array single array axis. Write user-defined function. signed , considering signing workshop, aren’t sure whether meet reqirements, please get touch workshop instructors host.","code":""}]
